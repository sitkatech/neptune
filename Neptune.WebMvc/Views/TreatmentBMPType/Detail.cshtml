@*-----------------------------------------------------------------------
    <copyright file="Detail.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using Neptune.EFModels.Entities
@using Neptune.WebMvc.Common
@using Neptune.WebMvc.Common.BootstrapWrappers
@using Neptune.WebMvc.Common.DhtmlWrappers
@using Neptune.WebMvc.Common.HtmlHelperExtensions
@using Neptune.WebMvc.Security
@using Neptune.WebMvc.Views.Shared
@using Neptune.WebMvc.Views.Shared.SortOrder
@inherits Neptune.WebMvc.Views.TreatmentBMPType.Detail
@section JavascriptAndStylesContent
{
    @{ DhtmlxGridIncludes.RenderPartialView(Html); }

}

@section RightOfPageTitle
{
    @if (new JurisdictionManageFeature().HasPermissionByPerson(ViewDataTyped.CurrentPerson))
    {
        <a class="btn btn-neptune headerButtonText treatmentBMPTypeButton" href="@ViewDataTyped.EditUrl">@BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-edit") Edit Treatment BMP Type</a>
    }
}

<div class="row">
    <div class="col-xs-12 col-sm-12">
        <div class="panel panelNeptune">
            <div class="panel-heading panelTitle">
                Basics
            </div>
            <div class="panel-body">
                <div class="row">
                    <label class="col-sm-3 control-label text-right">@Html.Label("Name")</label>
                    <div class="col-sm-9">@ViewDataTyped.TreatmentBMPType.TreatmentBMPTypeName</div>
                </div>
                <div class="row">
                    <label class="col-sm-3 control-label text-right">@Html.Label("Description")</label>
                    <div class="col-sm-9">@ViewDataTyped.TreatmentBMPType.TreatmentBMPTypeDescription</div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xs-12 col-sm-12">
        <div class="panel panelNeptune">
            <div class="panel-heading panelTitle">
                Treatment BMPs of this Treatment BMP Type
            </div>
            <div class="panel-body">
                <p style="font-style: italic">This grid may take a while to load depending on the volume of data in the system for this BMP type. Thank you for your patience.</p>
                @Html.DhtmlxGrid(ViewDataTyped.GridSpec, ViewDataTyped.GridName, ViewDataTyped.GridDataUrl, "height:500px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
            </div>
        </div>
    </div>
    <div class="col-xs-12 col-sm-12">
        <div class="panel panelNeptune">
            <div class="panel-heading panelTitle">
                Applicable Observation Types
                @if (ViewDataTyped.TreatmentBMPType.TreatmentBMPTypeAssessmentObservationTypes.Any())
                {
                    <span class="pull-right"> @SortOrderHelper.SortOrderModalLink(ViewDataTyped.ObservationTypeSortOrderUrl, ViewDataTyped.UserHasTreatmentBMPTypeManagePermissions) </span>
                }
            </div>
            <div class="panel-body">
                <div class="row"></div>
                <div class="row">
                    <div class="col-xs-12">
                        <table class="table">
                            <tr>
                                <th class="text-left">@Html.LabelWithSugarFor(FieldDefinitionType.TreatmentBMPAssessmentObservationType)</th>
                                <th class="text-left">@Html.LabelWithSugarFor(FieldDefinitionType.ObservationCollectionMethod)</th>
                                <th class="text-right">@Html.LabelWithSugarFor(FieldDefinitionType.DefaultBenchmarkValue)</th>
                                <th class="text-right">@Html.LabelWithSugarFor(FieldDefinitionType.DefaultThresholdValue)</th>
                                <th class="text-right">@Html.LabelWithSugarFor(FieldDefinitionType.AssessmentScoreWeight)</th>
                            </tr>
                            <tbody>
                                @foreach (var treatmentBMPTypeAssessmentObservationType in ViewDataTyped.TreatmentBMPType.TreatmentBMPTypeAssessmentObservationTypes.SortByOrderThenName())
                                {
                                    <tr>
                                        <td class="text-left">
                                            @if (!ViewDataTyped.CurrentPersonIsAnonymousOrUnassigned)
                                            {
                                                @treatmentBMPTypeAssessmentObservationType.TreatmentBMPAssessmentObservationType.TreatmentBMPAssessmentObservationTypeName
                                                @*todo:@treatmentBMPTypeAssessmentObservationType.TreatmentBMPAssessmentObservationType.GetDisplayNameAsUrl()*@
                                            }
                                            else
                                            {
                                                @treatmentBMPTypeAssessmentObservationType.TreatmentBMPAssessmentObservationType.TreatmentBMPAssessmentObservationTypeName
                                            }
                                        </td>
                                        <td class="text-left">@treatmentBMPTypeAssessmentObservationType.TreatmentBMPAssessmentObservationType.ObservationTypeSpecification.ObservationTypeCollectionMethod.ObservationTypeCollectionMethodDisplayName</td>
                                        <td class="text-right">@treatmentBMPTypeAssessmentObservationType.TreatmentBMPAssessmentObservationType.GetFormattedBenchmarkValue(treatmentBMPTypeAssessmentObservationType.DefaultBenchmarkValue)</td>
                                        <td class="text-right">@treatmentBMPTypeAssessmentObservationType.TreatmentBMPAssessmentObservationType.GetFormattedThresholdValue(treatmentBMPTypeAssessmentObservationType.DefaultThresholdValue, treatmentBMPTypeAssessmentObservationType.DefaultBenchmarkValue)</td>
                                        <td class="text-right">@(treatmentBMPTypeAssessmentObservationType.AssessmentScoreWeight.HasValue ? treatmentBMPTypeAssessmentObservationType.AssessmentScoreWeight.Value.ToStringShortPercent() : "pass/fail")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @foreach (var purpose in CustomAttributeTypePurpose.All)
    {
        <div class="col-xs-12 col-sm-12">
            <div class="panel panelNeptune">
                <div class="panel-heading panelTitle">
                    @purpose.CustomAttributeTypePurposeDisplayName
                    @if (ViewDataTyped.TreatmentBMPType.TreatmentBMPTypeCustomAttributeTypes.Any(x => x.CustomAttributeType.CustomAttributeTypePurpose.CustomAttributeTypePurposeID == purpose.CustomAttributeTypePurposeID))
                    {
                        <span class="pull-right">@SortOrderHelper.SortOrderModalLink(ViewDataTyped.AttributeTypeSortOrderUrl(purpose.CustomAttributeTypePurposeID), ViewDataTyped.UserHasTreatmentBMPTypeManagePermissions)</span>
                    }
                </div>
                <div class="panel-body">
                    <div class="row"></div>
                    <div class="row">
                        <div class="col-xs-12">
                            @{
                                var treatmentBMPTypeCustomAttributeTypes = ViewDataTyped.TreatmentBMPType.TreatmentBMPTypeCustomAttributeTypes.Where(x => x.CustomAttributeType.CustomAttributeTypePurpose.CustomAttributeTypePurposeID == purpose.CustomAttributeTypePurposeID).ToList();
                            }
                            @if (treatmentBMPTypeCustomAttributeTypes.Any())
                            {
                                <table class="table">
                                    <tr>
                                        <th class="text-left">@Html.LabelWithSugarFor(FieldDefinitionType.CustomAttributeType)</th>
                                        <th class="text-left">@Html.LabelWithSugarFor(FieldDefinitionType.CustomAttributeDataType)</th>
                                        <th class="text-right">@Html.LabelWithSugarFor(FieldDefinitionType.MeasurementUnit)</th>
                                        <th class="text-right">@Html.Label("Required?")</th>
                                        <th class="text-right">@Html.Label("Description")</th>
                                    </tr>
                                    <tbody>
                                        @foreach (var treatmentBMPTypeAttributeType in treatmentBMPTypeCustomAttributeTypes.SortByOrderThenName())
                                        {
                                            <tr>

                                                <td class="text-left">
                                                    @if (!ViewDataTyped.CurrentPersonIsAnonymousOrUnassigned)
                                                    {
                                                        @treatmentBMPTypeAttributeType.CustomAttributeType.CustomAttributeTypeName
                                                        @*todo:@treatmentBMPTypeAttributeType.CustomAttributeType.GetDisplayNameAsUrl()*@
                                                    }
                                                    else
                                                    {
                                                        @treatmentBMPTypeAttributeType.CustomAttributeType.CustomAttributeTypeName
                                                    }
                                                </td>
                                                <td class="text-left">@treatmentBMPTypeAttributeType.CustomAttributeType.CustomAttributeDataType.CustomAttributeDataTypeDisplayName</td>
                                                <td class="text-right">@treatmentBMPTypeAttributeType.CustomAttributeType.GetMeasurementUnitDisplayName()</td>
                                                <td class="text-right">@treatmentBMPTypeAttributeType.CustomAttributeType.IsRequired.ToYesNo()</td>
                                                <td class="text-right">@treatmentBMPTypeAttributeType.CustomAttributeType.CustomAttributeTypeDescription</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                            else
                            {
                                <p class="systemText">No @(purpose.CustomAttributeTypePurposeDisplayName) are defined for this BMP Type.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
