@inherits Neptune.WebMvc.Views.Shared.RegionalSubbasin.TraceFromPoint

<div class="leaflet-bottom leaflet-right text-right">
    <button class="btn btn-xs btn-neptune" style="pointer-events:auto" onclick="enterOrExitTraceMode()">View Upstream Area</button>
</div>

<script>
    var mapRef;
    var mapDivID = "@ViewDataTyped.MapDivID"
    var toolTip;
    var defaultCursorStyle;
    var arrowHeadsStyle =  {
        frequency: '100px',
        size: '10px',
        fill: true,
        color: '#0099ab',
        fillColor: "#FFFFFF"
    }
    
    var upstreamStyle = {
        fillColor: "#5600FF",
        fill: true,
        fillOpacity: 0.4,
        color: "#5600FF",
        weight: 1,
        stroke: true
    };

    var downstreamStyle = {
        fillColor: "#FF4345",
        fill: true,
        fillOpacity: 0.4,
        color: "#FF4345",
        weight: 1,
        stroke: true
    };

    NeptuneMaps.Map.prototype.setupTraceFromPoint = function() {
        mapRef = this;
        this.rsbTraceLayer = null;
        this.traceFromPointMode = false;
    }

    function getRSBTraceFromPoint(e) {
         mapRef.removeLayerFromMap(mapRef.rsbTraceLayer);
         if (mapRef.traceFromPointMode) {
             jQuery.ajax({
                url: "/RegionalSubbasin/GetRegionalSubbasinGraphTraceAsFeatureCollectionFromPoint",
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                data: JSON.stringify({"Longitude" : e.latlng.lng, "Latitude" : e.latlng.lat}),
                type: 'POST',
                dataType: 'json',
                jsonpCallback: 'getJson'
             }).then(function(response) {
                 mapRef.rsbTraceLayer = L.geoJson(response.features.sort((a, b) => b.geometry.type.localeCompare(a.geometry.type)),
                                        {
                                            style: function (feature) {
                                                var depth = feature.properties.Depth;
                                                if (feature.geometry.type == "LineString") {
                                                    var depthForWeight = Math.abs(depth) * 0.1;
                                                    return {
                                                        weight: depthForWeight > 2.5 ? 0.5 : 3 - depthForWeight
                                                    }
                                                }

                                                return depth >= 0 ? upstreamStyle : downstreamStyle
                                            },
                                            arrowheads: arrowHeadsStyle
                                        });
                 mapRef.rsbTraceLayer.addTo(mapRef.map);
             });
         }
    };

    function enterOrExitTraceMode() {
        if (mapRef.traceFromPointMode) {
            exitTraceFromPointMode();
            return;
        }

        enterTraceFromPointMode();
    }

    function updateTooltipPosition(e) {
        toolTip.setLatLng(mapRef.map.layerPointToLatLng(e.layerPoint));
    }

    function openRSBTraceTooltip(e) {
        mapRef.map.openTooltip(toolTip);
    }

    function closeRSBTraceTooltip(e) {
        mapRef.map.closeTooltip(toolTip);
    }

    function setupRSBTraceTooltip() {
        toolTip = L.tooltip({sticky: true, permanent: true})
                    //requires a default starting position, otherwise it will throw an error
                   .setLatLng([0,0])
                   .setContent("Click on the map to see<br/>the Regional Subbasins<br/>upstream and downstream<br/>of the selected point").addTo(mapRef.map);
        mapRef.map.on('mousemove', updateTooltipPosition);
        jQuery("#" + mapDivID).on('mouseleave', closeRSBTraceTooltip);
        jQuery("#" + mapDivID).on('mouseenter', openRSBTraceTooltip);
    }

    function tearDownRSBTraceTooltip() {
        mapRef.map.off('mousemove', updateTooltipPosition);
        jQuery("#" + mapDivID).off('mouseleave', closeRSBTraceTooltip);
        jQuery("#" + mapDivID).off('mouseenter', openRSBTraceTooltip);
        mapRef.removeLayerFromMap(toolTip);
        toolTip = null;
    }

    function enterTraceFromPointMode() {
       mapRef.traceFromPointMode = true;
       mapRef.map.on("click", getRSBTraceFromPoint);
       setupRSBTraceTooltip();  
       defaultCursorStyle = document.getElementById(mapDivID).style.cursor;
       document.getElementById(mapDivID).style.cursor = 'crosshair';
       event.stopPropagation();
    }

    function exitTraceFromPointMode() {
        mapRef.traceFromPointMode = false;
        mapRef.map.off("click", getRSBTraceFromPoint);
        tearDownRSBTraceTooltip();
        document.getElementById(mapDivID).style.cursor = defaultCursorStyle;
        mapRef.removeLayerFromMap(mapRef.rsbTraceLayer);
        mapRef.rsbTraceLayer = null;
    }

    // function toggleUpstreamRSBTrace() {
    //     if (upstreamRSBTraceLayer) {
    //         map.map.removeLayer(upstreamRSBTraceLayer);
    //         upstreamRSBTraceLayer = null;
    //         jQuery("#toggleUpstreamRSBTraceDisplay").text("View");
    //         jQuery("#rsbTraceUpstreamLegendItem").hide();
    //         if (!downstreamRSBTraceLayer) {
    //             jQuery("#rsbTraceDirectionOfFlowLegendItem").hide();
    //         }
    //         return;
    //     }

    //         jQuery("#toggleUpstreamRSBTraceDisplay").text("Hide");
    //         showRSBLegendItemAndFitBounds();
    // }

    // function showRSBLegendItemAndFitBounds() {
    //     jQuery("#rsbTraceDownstreamLegendItem").show();
    //     jQuery("#rsbTraceDirectionOfFlowLegendItem").show();
    // }
</script>
