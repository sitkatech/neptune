@*-----------------------------------------------------------------------
    <copyright file="Detail.cshtml" company="Tahoe Regional Planning Agency">
    Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using Neptune.WebMvc.Views.Shared
@using Neptune.EFModels.Entities
@using Neptune.WebMvc.Common
@using Neptune.WebMvc.Common.DhtmlWrappers
@using Neptune.WebMvc.Views.Shared.RegionalSubbasin
@using HRUCharacteristics = Neptune.WebMvc.Views.Shared.HRUCharacteristics.HRUCharacteristics
@inherits Neptune.WebMvc.Views.RegionalSubbasin.Detail

@section JavascriptAndStylesContent
{
    @{ MapJavascriptIncludes.RenderPartialView(Html); }
    @{
        DhtmlxGridIncludes.RenderPartialView(Html);
    }
    <script type="text/javascript">
        var regionalSubbasinMap;
        var selectedFeature;
        var regionalSubbasinID = @ViewDataTyped.RegionalSubbasin.RegionalSubbasinID;
        jQuery(function () {
            debugger;
            var mapInitJson = @Html.Raw(ViewDataTyped.MapInitJson.ToJsonHtmlString());
            var geoserverUrl = @Html.Raw(ViewDataTyped.GeoServerUrl.ToJS());

            regionalSubbasinMap = new NeptuneMaps.Map(mapInitJson, "Terrain", geoserverUrl);
            regionalSubbasinMap.wmsParams = regionalSubbasinMap.createWmsParamsWithLayerName("OCStormwater:LoadGeneratingUnits");
            regionalSubbasinMap.wfsParams = regionalSubbasinMap.createWfsParamsWithLayerName("OCStormwater:LoadGeneratingUnits")

            var lguLegendUrl = "/Content/img/legendImages/loagGeneratingUnit.png";
            var lguLabel = "<span><img src='" + lguLegendUrl + "' height='14px'/> LGUs</span>";
            var lguLayer = regionalSubbasinMap.addWmsLayer("OCStormwater:LoadGeneratingUnits",
                lguLabel,
                {
                    maxZoom:30,
                    cql_filter: "RegionalSubbasinID = " + regionalSubbasinID
                }, false);
            lguLayer.bringToFront();
            regionalSubbasinMap.map.on('click', selectLGU);
            regionalSubbasinMap.setupTraceFromPoint();
        });

        var selectLGU = function (evt) {
            var customParams = {
                cql_filter: 'RegionalSubbasinID = ' + regionalSubbasinID + ' and intersects(LoadGeneratingUnitGeometry4326, POINT(' + evt.latlng.lat + ' ' + evt.latlng.lng + '))'
            }
            selectLGUByWFS(customParams, evt.latlng);
        };

        var selectLGUByWFS = function (customParams, latlng) {
            if (!Sitka.Methods.isUndefinedNullOrEmpty(selectedFeature)) {
                regionalSubbasinMap.map.removeLayer(selectedFeature);
                regionalSubbasinMap.layerControl.removeLayer(selectedFeature);
            }

            var parameters = L.Util.extend(regionalSubbasinMap.wfsParams, customParams);
            SitkaAjax.ajax({
                url: regionalSubbasinMap.geoserverUrlOWS + L.Util.getParamString(parameters),
                dataType: 'json',
                jsonpCallback: 'getJson'
            },
                function (response) {
                    selectedFeature = L.geoJSON(response);
                    console.log(response);
                    console.log(selectedFeature);

                    if (response.features) {
                        var properties = response.features[0].properties;

                        var content = '<dl>' +
                            '<dt>LGU ID</dt>' +
                            '<dd>' +
                            "<a href='/LoadGeneratingUnit/Detail/" +
                            properties.LoadGeneratingUnitID +
                            "'>" +
                            properties.LoadGeneratingUnitID +
                            "</a>" +
                            '</dd>' ;

                        var popup = L.popup()
                            .setLatLng(latlng)
                            .setContent(content)
                            .openOn(regionalSubbasinMap.map);
                    }
                });
        };


    </script>
}
@section RightOfPageTitle{
}

<div class="row">
    <!-- left-->
    <div class="col-xs-12 col-sm-6">
        <div class="panel panelNeptune">
            <div class="panel-heading panelTitle">
                Basics
            </div>
            <div class="panel-body">
                <div class="row">
                    <label class="col-sm-5 control-label text-right">Catchment ID</label>
                    <div class="col-sm-7">@ViewDataTyped.RegionalSubbasin.OCSurveyCatchmentID</div>
                </div>
                <div class="row">
                    <label class="col-sm-5 control-label text-right">Downstream Catchment ID</label>
                    <div class="col-sm-7">
                        @if (ViewDataTyped.RegionalSubbasin.OCSurveyDownstreamCatchmentID != null)
                        {
                            <a href="@ViewDataTyped.OCSurveyDownstreamCatchmentDetailUrl">@ViewDataTyped.RegionalSubbasin.OCSurveyDownstreamCatchmentID</a>
                        }
                        else
                        {
                            <p class="systemText">This Regional Subbasin is the downstream terminus of its watershed and flows directly to the ocean.</p>
                        }
                    </div>
                </div>
                <div class="row">
                    <label class="col-sm-5 control-label text-right">Area</label>
                    <div class="col-sm-7">@ViewDataTyped.RegionalSubbasin.GetRegionalSubbasinAreaString()</div>
                </div>
                <div class="row">
                    <label class="col-sm-5 control-label text-right">Drain ID</label>
                    <div class="col-sm-7">@ViewDataTyped.RegionalSubbasin.DrainID</div>
                </div>
                <div class="row">
                    <label class="col-sm-5 control-label text-right">Watershed</label>
                    <div class="col-sm-7">@ViewDataTyped.RegionalSubbasin.Watershed</div>
                </div>
            </div>
        </div>
        <div class="panel panelNeptune">
            <div class="panel-heading panelTitle">
               Land Use Statistics
            </div>
            <div class="panel-body">
                @if (ViewDataTyped.HasAnyHRUCharacteristics)
                {
                    HRUCharacteristics.RenderPartialView(Html, ViewDataTyped.HRUCharacteristicsViewData);
                }
                else
                {
                    <p class="systemText">Land Use Statistics have not been calculated for this @FieldDefinitionType.RegionalSubbasin.GetFieldDefinitionLabel()</p>
                }
            </div>
        </div>
    </div>

    <!--right-->
    <div class="col-xs-12 col-sm-6">
        <div class="panel panelNeptune">
            <div class="panel-heading panelTitle">
                Location
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-xs-12">
                        <div id="@ViewDataTyped.MapInitJson.MapDivID" style="height: 500px;">
                            @{
                                TraceFromPoint.RenderPartialView(Html, new TraceFromPointViewData(ViewDataTyped.MapInitJson.MapDivID));
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-xs-12 col-sm-12">
        <div class="panel panelNeptune">
            <div class="panel-heading panelTitle">
                Load Generating Units Table
            </div>
            <div class="panel-body">
                @Html.DhtmlxGrid(ViewDataTyped.LoadGeneratingUnitsGridSpec, ViewDataTyped.LoadGeneratingUnitsGridName, ViewDataTyped.LoadGeneratingUnitsGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
            </div>
        </div>
    </div>
    
    <div class="col-xs-12">
        <div class="row">
            <div class="col-xs-12">
                <div class="panel panelNeptune">
                    <div class="panel-heading panelTitle">
                        HRU Characteristics
                    </div>
                    <div class="panel-body">
                        @Html.DhtmlxGrid(ViewDataTyped.HRUCharacteristicsGridSpec, ViewDataTyped.HRUCharacteristicsGridName, ViewDataTyped.HRUCharacteristicsGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
