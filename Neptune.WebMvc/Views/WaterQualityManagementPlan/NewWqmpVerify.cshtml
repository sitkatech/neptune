@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Neptune.WebMvc.Common.HtmlHelperExtensions
@using Neptune.WebMvc.Views.WaterQualityManagementPlan
@model NewWqmpVerifyViewModel

@inherits NewWqmpVerify

<style>
    .radio-inline label {
        font-weight: normal;
    }

    .row-group {
        background: whitesmoke;
    }
    #WaterQualityManagementPlanVerifyBmpTable .table-padding {
        padding: 20px 10px 0 10px;
    }

</style>

@Html.ValidationSummary()
<div class="row">
    <div class="col-xs-12">
        <div class="form-horizontal">
            <form method="post" enctype="multipart/form-data" class="verify-form">
                <div class="row row-group">
                    <div class="col-xs-12 ">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h5> Water Quality Management Plan Verification Basics</h5>
                            </div>
                            <div style="padding: 21px 15px">
                                <div class="row">
                                    <div class="col-xs-6 col-sm-3 control-label text-right"> @Html.LabelWithSugarFor(m => m.WaterQualityManagementPlanVerifyTypeID)</div>
                                    <div class="col-xs-6 col-sm-9">
                                        @foreach (var waterQualityManagementPlanVerifyType in ViewDataTyped.WaterQualityManagementPlanVerifyTypes)
                                        {
                                            <div class="radio-inline" style="padding-top:0">
                                                <label style="margin: 0">
                                                    @Html.RadioButtonFor(m => m.WaterQualityManagementPlanVerifyTypeID, waterQualityManagementPlanVerifyType.WaterQualityManagementPlanVerifyTypeID) @waterQualityManagementPlanVerifyType.WaterQualityManagementPlanVerifyTypeName
                                                </label>
                                            </div>
                                        }
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-xs-6 col-sm-3 control-label text-right"> @Html.LabelWithSugarFor(m => m.WaterQualityManagementPlanVisitStatusID)</div>
                                    <div class="col-xs-6 col-sm-9">
                                        @foreach (var waterQualityManagementPlanVisitStatus in ViewDataTyped.WaterQualityManagementPlanVisitStatuses)
                                        {
                                            <div class="radio-inline" style="padding-top:0">
                                                <label style="margin: 0">
                                                    @Html.RadioButtonFor(m => m.WaterQualityManagementPlanVisitStatusID, waterQualityManagementPlanVisitStatus.WaterQualityManagementPlanVisitStatusID)
                                                    @waterQualityManagementPlanVisitStatus.WaterQualityManagementPlanVisitStatusName
                                                </label>
                                            </div>
                                        }
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-xs-6 col-sm-3 control-label text-right">
                                        @Html.LabelWithSugarFor(m => m.VerificationDate)
                                    </div>
                                    <div class="col-xs-3 col-sm-3">
                                        <div class='input-group date' id='verificationDatePicker'>
                                            <input type='text' class="form-control" style="background-color:#FFF" name="VerificationDate" readonly/>
                                            <span class="input-group-addon btn-neptune">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row row-group">
                    <div class="col-xs-12 ">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h5> Supporting Documentation</h5>
                                <p>Upload field checklist, self-certification form, O&M records, etc, as applicable</p>
                                @Html.ValidationMessageFor(m => m.StructuralDocumentFile)
                            </div>
                            <div style="padding: 21px 15px">
                                @Html.EditorFor(m => m.StructuralDocumentFile)
                                <p class="help-block">Max file size is 100 MB</p>
                                <p class="help-block">Allowed Extensions: pdf, zip, doc, docx, xls, xlsx, jpg, png</p>

                                @if (Model.StructuralDocumentFile != null)
                                {
                                    <p>@Model.StructuralDocumentFile.FileName</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row row-group">
                    <div class="col-xs-12 ">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h5> Source Control BMPs</h5>
                                <p> Provide a narrative assessment of the applicable source control BMPs present on the site</p>
                            </div>
                            <div style="padding: 21px 15px">
                                @Html.TextAreaFor(m => m.SourceControlCondition, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row row-group">
                    <div class="col-xs-12 ">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h5>  Structural Treatment and Hydromodification BMPs</h5>
                            </div>
                            <div style="padding: 21px 15px">
                                @if (Model.WaterQualityManagementPlanVerifyQuickBMPs.Any() || Model.WaterQualityManagementPlanVerifyTreatmentBMPSimples.Any())
                                {
                                    <table class="table table-condensed table-striped" id="WaterQualityManagementPlanVerifyBmpTable">
                                        <thead>
                                        <tr>
                                            <th> Name</th>
                                            <th> Type</th>
                                            <th> O&amp;M Adequate</th>
                                            <th> O&amp;M Notes</th>
                                            <th> Detailed Inventory Record?</th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.WaterQualityManagementPlanVerifyQuickBMPs != null && Model.WaterQualityManagementPlanVerifyQuickBMPs.Any())
                                            {
                                                for (var i = 0; i < Model.WaterQualityManagementPlanVerifyQuickBMPs.Count; i++)
                                                {
                                                    var waterQualityManagementPlanVerifyQuickBMP = Model.WaterQualityManagementPlanVerifyQuickBMPs[i];
                                                    <tr>
                                                        <td class="table-padding"> @waterQualityManagementPlanVerifyQuickBMP.QuickBMPName</td>
                                                        <td class="table-padding"> @waterQualityManagementPlanVerifyQuickBMP.TreatmentBMPType</td>
                                                        <td class="table-padding">
                                                            <label>@Html.RadioButtonFor(m => m.WaterQualityManagementPlanVerifyQuickBMPs[i].IsAdequate, true) Yes</label>
                                                            <label> @Html.RadioButtonFor(m => m.WaterQualityManagementPlanVerifyQuickBMPs[i].IsAdequate, false) No </label>
                                                        </td>
                                                        <td class="table-padding"> @Html.TextBoxFor(m => m.WaterQualityManagementPlanVerifyQuickBMPs[i].WaterQualityManagementPlanVerifyQuickBMPNote, new { @class = "form-control" })</td>
                                                        <td class="table-padding"> No</td>
                                                    </tr>
                                                    <tr style="display: none;">
                                                        <td>
                                                            @Html.HiddenFor(m => m.WaterQualityManagementPlanVerifyQuickBMPs[i].QuickBMPName)
                                                            @Html.HiddenFor(x => x.WaterQualityManagementPlanVerifyQuickBMPs[i].QuickBMPID)
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                            @if (Model.WaterQualityManagementPlanVerifyTreatmentBMPSimples != null && Model.WaterQualityManagementPlanVerifyTreatmentBMPSimples.Any())
                                            {
                                                for (var i = 0; i < Model.WaterQualityManagementPlanVerifyTreatmentBMPSimples.Count; i++)
                                                {
                                                    var waterQualityManagementPlanVerifyTreatmentBMPSimple = Model.WaterQualityManagementPlanVerifyTreatmentBMPSimples[i];


                                                    <tr>
                                                        <td class="table-padding"> @waterQualityManagementPlanVerifyTreatmentBMPSimple.TreatmentBMPName</td>
                                                        <td class="table-padding"> @waterQualityManagementPlanVerifyTreatmentBMPSimple.TreatmentBMPType</td>
                                                        <td class="table-padding">
                                                            <label>
                                                                @Html.RadioButtonFor(m => m.WaterQualityManagementPlanVerifyTreatmentBMPSimples[i].IsAdequate, true)
                                                                Yes
                                                            </label>
                                                            <label>
                                                                @Html.RadioButtonFor(m => m.WaterQualityManagementPlanVerifyTreatmentBMPSimples[i].IsAdequate, false)
                                                                No
                                                            </label>
                                                        </td>
                                                        <td class="table-padding"> @Html.TextBoxFor(m => m.WaterQualityManagementPlanVerifyTreatmentBMPSimples[i].WaterQualityManagementPlanVerifyTreatmentBMPNote, new { @class = "form-control" })</td>

                                                        <td class="table-padding"> Yes </td>
                                                    </tr>
                                                    <tr style="display: none;">
                                                        <td>
                                                            @Html.HiddenFor(m => m.WaterQualityManagementPlanVerifyTreatmentBMPSimples[i].TreatmentBMPName)
                                                            @Html.HiddenFor(x => x.WaterQualityManagementPlanVerifyTreatmentBMPSimples[i].TreatmentBMPID)
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td colspan="5" style="padding-bottom: 20px; border-top: none">

                                                            @if (waterQualityManagementPlanVerifyTreatmentBMPSimple.FieldVisiLastVisitedtDate != null)
                                                            {
                                                                <span>
                                                                    Last assessed on @waterQualityManagementPlanVerifyTreatmentBMPSimple.FieldVisiLastVisitedtDate (Score @waterQualityManagementPlanVerifyTreatmentBMPSimple.FieldVisitMostRecentScore). <a href="@waterQualityManagementPlanVerifyTreatmentBMPSimple.TreatmentBMPDetailUrl" target="_blank" rel="noopener noreferrer">Conduct a new Assessment <span class="glyphicon glyphicon-new-window"></span></a>
                                                                </span>
                                                            }
                                                            else
                                                            {
                                                                <span class="text-danger">This BMP has no finalized assessment. <a href="@waterQualityManagementPlanVerifyTreatmentBMPSimple.TreatmentBMPDetailUrl" target="_blank" rel="noopener noreferrer">Conduct a new Assessment <span class="glyphicon glyphicon-new-window"></span></a> </span>
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        
                                        </tbody>
                                    </table>
                                }else
                                {
                                    <p class="systemText">No Structural Treatment or Hydromodification BMPs are currently associated with this WQMP</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row row-group">
                    <div class="col-xs-12 ">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h5> Finalize Verification</h5>
                            </div>
                            <div style="padding: 21px 15px">
                                <div class="alert alert-warning" role="alert">
                                    The Verification of O&amp;M Status needs to be answered in order to Finalize this O&amp;M Verification.
                                </div>

                                <div class="row">
                                    <label class="col-xs-6 col-sm-3 control-label text-right"> Verification of O&amp;M Status</label>
                                    <div class="col-xs-6 col-sm-9">  @Html.SearchableDropDownListFor(m => m.WaterQualityManagementPlanVerifyStatusID, ViewDataTyped.WaterQualityManagementPlanVerifyStatuses, new { onchange= "verificationOMStatus()" })</div>
                                </div>
                                <div class="row" style="margin-top: 16px">
                                    <label class="col-xs-6 col-sm-3 control-label text-right"> Enforcement or Follow-up Actions</label>
                                    <div class="col-xs-6 col-sm-9">  @Html.TextAreaFor(m => m.EnforcementOrFollowupActions, new { @class = "form-control" })</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pull-right" style="margin-top: 16px">
                    <button type="submit" class="btn btn-neptune">Save</button>
                    <button type="button" class="btn btn-neptune" onclick="saveAndFinalize()" id="saveAndFinalizeButton">Save &amp; Finalize</button>
                    <a href="@ViewDataTyped.WaterQualityManagementPlanUrl" class="btn btn-neptune">Cancel</a>
                    @Html.HiddenFor(m => m.HiddenIsFinalizeVerificationInput, new { Value = "false" })
                </div>
            </form>
        </div>
    </div>
</div>


<script>
    function saveAndFinalize() {
        var theForm = jQuery('form.verify-form');
        var hiddenIsFinalizeVerificationInput = jQuery('#@Html.IdFor(m => m.HiddenIsFinalizeVerificationInput)');
        hiddenIsFinalizeVerificationInput.val(true);
        theForm.submit();
    }

    function verificationOMStatus() {
        var verificationOMStatusValue = jQuery('#@Html.IdFor(m => m.WaterQualityManagementPlanVerifyStatusID)').val();
        if (verificationOMStatusValue == "") {
            jQuery('#saveAndFinalizeButton').addClass("disabled");
            jQuery('#saveAndFinalizeButton').attr("title", "The \"Verification of O&M Status\" needs to be set for this to be finalized");
        } else {
            jQuery('#saveAndFinalizeButton').removeClass("disabled");
            jQuery('#saveAndFinalizeButton').attr("title", "");
        }
    }

    jQuery(document).ready(function() {
        verificationOMStatus();

        jQuery('#verificationDatePicker').datetimepicker({
            format: 'L',
            defaultDate: new Date("@Model.VerificationDate.ToString()"),
            ignoreReadonly: true
        });

        jQuery('[name="VerificationDate"]').on("click", function () {
            jQuery(this).next().trigger('click');
        });
    });
</script>