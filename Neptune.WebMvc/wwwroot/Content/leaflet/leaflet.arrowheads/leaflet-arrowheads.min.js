function modulus(n,t){return(n%t+t)%t}function definedProps(n){return Object.fromEntries(Object.entries(n).filter(([,n])=>n!==undefined))}function isInMeters(n){return n.toString().trim().slice(n.toString().length-1,n.toString().length)==="m"}function isInPercent(n){return n.toString().trim().slice(n.toString().length-1,n.toString().length)==="%"}function isInPixels(n){return n.toString().trim().slice(n.toString().length-2,n.toString().length)==="px"}function pixelsToMeters(n,t){let i=t.getCenter(),r=t.latLngToLayerPoint(i),u={x:r.x+Number(n),y:r.y},f=t.layerPointToLatLng(u);return t.distance(i,f)}L.Polyline.include({arrowheads:function(n={}){this.options.noClip=!0;let t=Object.assign({},{yawn:60,size:"15%",frequency:"allvertices",proportionalToTotal:!1},n);return this._arrowheadOptions=t,this._hatsApplied=!0,this},buildVectorHats:function(n){this._arrowheads&&this._arrowheads.remove();this._ghosts&&this._ghosts.remove();let e=Object.getPrototypeOf(Object.getPrototypeOf(this.options)),o=Object.assign({},e,this.options),r=Object.assign({},o,n);r.smoothFactor=1;r.fillOpacity=1;r.fill=n.fill?!0:!1;r.interactive=!1;let i=n.size.toString(),f=[];const{frequency:t,offsets:u}=n;(u?.start||u?.end)&&this._buildGhosts({start:u.start,end:u.end});const s=this._ghosts||this;s._parts.forEach(u=>{var e;const o=u.map(n=>this._map.layerPointToLatLng(n)),a=(()=>{let t=0;for(var n=0;n<u.length-1;n++)t+=this._map.distance(o[n],o[n+1]);return t})();let s,l,c,h;if(isNaN(t)?isInPercent(t)?console.error("Error: arrowhead frequency option cannot be given in percent.  Try another unit."):isInMeters(t)?(c=t.slice(0,t.length-1)/a,h=1/c,h=Math.floor(h),c=1/h):isInPixels(t)&&(c=(()=>{let n=t.slice(0,t.length-2),i=pixelsToMeters(n,this._map);return i/a})(),h=1/c,h=Math.floor(h),c=1/h):(c=1/t,h=t),n.frequency==="allvertices")l=(()=>{let t=[];for(var n=1;n<o.length;n++){let i=L.GeometryUtil.angle(this._map,o[modulus(n-1,o.length)],o[n])+180;t.push(i)}return t})(),s=o,s.shift();else if(n.frequency==="endonly"&&o.length>=2)s=[o[o.length-1]],l=[L.GeometryUtil.angle(this._map,o[o.length-2],o[o.length-1])+180,];else{s=[];let n=[];for(e=0;e<h;e++){let t=L.GeometryUtil.interpolateOnLine(this._map,o,c*(e+1));t&&(n.push(t),s.push(t.latLng))}l=(()=>{let i=[];for(var t=0;t<n.length;t++){let r=L.GeometryUtil.angle(this._map,o[n[t].predecessor+1],o[n[t].predecessor]);i.push(r)}return i})()}let v=[];const y=(t,i={})=>{let u=i.yawn??n.yawn,f=L.GeometryUtil.destination(s[e],l[e]-u/2,t),o=L.GeometryUtil.destination(s[e],l[e]+u/2,t),h=[[f.lat,f.lng],[s[e].lat,s[e].lng],[o.lat,o.lng],],c=n.fill?L.polygon(h,{...r,...i}):L.polyline(h,{...r,...i});v.push(c)},p=(t,i={})=>{let u=t.slice(0,t.length-2),o=i.yawn??n.yawn,f=this._map.latLngToLayerPoint(s[e]),h=l[e],c=(180-h-o/2)*(Math.PI/180),a=(180-h+o/2)*(Math.PI/180),b=u*Math.sin(c),k=u*Math.cos(c),d=u*Math.sin(a),g=u*Math.cos(a),nt={x:f.x+b,y:f.y+k},tt={x:f.x+d,y:f.y+g},y=this._map.layerPointToLatLng(nt),p=this._map.layerPointToLatLng(tt),w=[[y.lat,y.lng],[s[e].lat,s[e].lng],[p.lat,p.lng],],it=n.fill?L.polygon(w,{...r,...i}):L.polyline(w,{...r,...i});v.push(it)};for(e=0;e<s.length;e++){let{perArrowheadOptions:t,...globalOptions}=n;if(t=t?t(e):{},t=Object.assign(globalOptions,definedProps(t)),i=t.size??i,isInMeters(i)){let n=i.slice(0,i.length-1);y(n,t)}else if(isInPercent(i)){let r=i.slice(0,i.length-1),f=(()=>{if(n.frequency==="endonly"&&n.proportionalToTotal)return a*r/100;else{let n=a/(u.length-1);return n*r/100}})();y(f,t)}else isInPixels(i)?p(n.size,t):console.error("Error: Arrowhead size unit not defined.  Check your arrowhead options.")}f.push(...v)});let h=L.layerGroup(f);return this._arrowheads=h,this},getArrowheads:function(){return this._arrowheads?this._arrowheads:console.error(`Error: You tried to call '.getArrowheads() on a shape that does not have a arrowhead.  Use '.arrowheads()' to add a arrowheads before trying to call '.getArrowheads()'`)},_buildGhosts:function({start:t,end:n}){if(t||n){let i=this.getLatLngs();i=Array.isArray(i[0])?i:[i];const r=i.map(i=>{const r=(()=>{let t=0;for(var n=0;n<i.length-1;n++)t+=this._map.distance(i[n],i[n+1]);return t})();if(t){let u=(()=>{if(isInMeters(t))return Number(t.slice(0,t.length-1));if(isInPixels(t)){let n=Number(t.slice(0,t.length-2));return pixelsToMeters(n,this._map)}})(),n=L.GeometryUtil.interpolateOnLine(this._map,i,u/r);i=i.slice(n.predecessor===-1?1:n.predecessor+1,i.length);i.unshift(n.latLng)}if(n){let u=(()=>{if(isInMeters(n))return Number(n.slice(0,n.length-1));if(isInPixels(n)){let t=Number(n.slice(0,n.length-2));return pixelsToMeters(t,this._map)}})(),t=L.GeometryUtil.interpolateOnLine(this._map,i,(r-u)/r);i=i.slice(0,t.predecessor+1);i.push(t.latLng)}return i});this._ghosts=L.polyline(r,{...this.options,color:"rgba(0,0,0,0)",stroke:0,smoothFactor:0,interactive:!1});this._ghosts.addTo(this._map)}},deleteArrowheads:function(){this._arrowheads&&(this._arrowheads.remove(),delete this._arrowheads,delete this._arrowheadOptions,this._hatsApplied=!1);this._ghosts&&this._ghosts.remove()},_update:function(){this._map&&(this._clipPoints(),this._simplifyPoints(),this._updatePath(),this._hatsApplied&&(this.buildVectorHats(this._arrowheadOptions),this._map.addLayer(this._arrowheads)))},remove:function(){return this._arrowheads&&this._arrowheads.remove(),this._ghosts&&this._ghosts.remove(),this.removeFrom(this._map||this._mapToAdd)}});L.LayerGroup.include({removeLayer:function(n){var t=n in this._layers?n:this.getLayerId(n);return this._map&&this._layers[t]&&(this._layers[t]._arrowheads&&this._layers[t]._arrowheads.remove(),this._map.removeLayer(this._layers[t])),delete this._layers[t],this},onRemove:function(n,t){for(var t in this._layers)this._layers[t]&&this._layers[t].remove();this.eachLayer(n.removeLayer,n)}});L.Map.include({removeLayer:function(n){var t=L.Util.stamp(n);if(n._arrowheads&&n._arrowheads.remove(),n._ghosts&&n._ghosts.remove(),!this._layers[t])return this;if(this._loaded)n.onRemove(this);return n.getAttribution&&this.attributionControl&&this.attributionControl.removeAttribution(n.getAttribution()),delete this._layers[t],this._loaded&&(this.fire("layerremove",{layer:n}),n.fire("remove")),n._map=n._mapToAdd=null,this}});L.GeoJSON.include({geometryToLayer:function(n,t){var i=n.type==="Feature"?n.geometry:n,u=i?i.coordinates:null,f=[],a=t&&t.pointToLayer,e=t&&t.coordsToLatLng||L.GeoJSON.coordsToLatLng,o,s,r,h,c,l;if(!u&&!i)return null;switch(i.type){case"Point":return o=e(u),this._pointToLayer(a,n,o,t);case"MultiPoint":for(r=0,h=u.length;r<h;r++)o=e(u[r]),f.push(this._pointToLayer(a,n,o,t));return new L.FeatureGroup(f);case"LineString":case"MultiLineString":return s=L.GeoJSON.coordsToLatLngs(u,i.type==="LineString"?0:1,e),c=new L.Polyline(s,t),t.arrowheads&&c.arrowheads(t.arrowheads),c;case"Polygon":case"MultiPolygon":return s=L.GeoJSON.coordsToLatLngs(u,i.type==="Polygon"?1:2,e),new L.Polygon(s,t);case"GeometryCollection":for(r=0,h=i.geometries.length;r<h;r++)l=this.geometryToLayer({geometry:i.geometries[r],type:"Feature",properties:n.properties},t),l&&f.push(l);return new L.FeatureGroup(f);default:throw new Error("Invalid GeoJSON object.");}},addData:function(n){var f=L.Util.isArray(n)?n:n.features,u,e,i,r,t;if(f){for(u=0,e=f.length;u<e;u++)i=f[u],(i.geometries||i.geometry||i.features||i.coordinates)&&this.addData(i);return this}if((r=this.options,r.filter&&!r.filter(n))||(t=this.geometryToLayer(n,r),!t))return this;if(t.feature=L.GeoJSON.asFeature(n),t.defaultOptions=t.options,this.resetStyle(t),r.onEachFeature)r.onEachFeature(n,t);return this.addLayer(t)},_pointToLayer:function(n,t,i,r){return n?n(t,i):new L.Marker(i,r&&r.markersInheritOptions&&r)}});