@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.ModalDialog
@using Neptune.Web.Models
@using Neptune.Web.Views.Shared
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@inherits Neptune.Web.Areas.Trash.Views.OnlandVisualTrashAssessment.AddOrRemoveParcels

@{ @SetLayout("SiteLayout.cshtml", ViewDataTyped) }
@section JavascriptAndStylesContent
{

    @if (Neptune.Web.Models.OVTASection.RecordObservations.IsSectionComplete(ViewDataTyped.OVTA))
    {
        MapJavascriptIncludes.RenderPartialView(Html);
        <script src="@Url.Content("~/ScriptsCustom/Maps/NeptuneMaps.GeoServerMap.min.js")" type="text/javascript"></script>
        <script type="text/javascript" src="@Url.Content("~/Areas/Trash/Views/OnlandVisualTrashAssessment/AddOrRemoveParcelsController.js")"></script>
        <script type="text/javascript">
            // <![CDATA[
            angular.module("NeptuneApp")
                .factory("angularModelAndViewData",
                    function() {
                        return {
                            AngularModel: @Html.Raw(JObject.FromObject(Model).ToString(Formatting.None)),
                            AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular).ToString(Formatting.None))
                        };
                    });

            jQuery(document).ready(function() {
                HookupCheckIfFormIsDirtyNoDisable(undefined);
            });

        </script>
    }
}

@if (!ViewDataTyped.RequireRefresh)
{
    <p>Click the map to add or remove parcels from the Assessment Area. Note that it may be necessary to zoom the map to see APNs on the map.</p>
}
else
{
    <p class="systemText">The Assessment Area has been manually edited. You must refresh the list of parcels from the observations to use the parcel editor.</p>
}

<div ng-app="NeptuneApp" ng-controller="AddOrRemoveParcelsController">
    <div class="row" ng-show="!AngularViewData.IsDraftGeometryManuallyRefined">
        <div class="col-sm-12 col-md-12" style="margin-top: 20px;">
            <div id="mapContainer">
                <div id="@ViewDataTyped.OVTASummaryMapInitJson.MapDivID" style="height: 350px; margin: 0">
                </div>
            </div>
        </div>
    </div><div class="row">
        <div class="col-sm-12" style="margin-top:10px">
            @ModalDialogFormHelper.ModalDialogFormLink("Refresh Assessment Area Based on Observations", ViewDataTyped.RefreshUrl, "Refresh Assessment Area", 500, "Refresh", "Cancel", new List<string> { "btn btn-neptune" }, null, null)
        </div>
    </div>
    @using (Html.BeginForm())
    {
        <div ng-repeat="parcelId in AngularModel.ParcelIDs">
            <input type="hidden" name="@Html.NameFor(x => x.ParcelIDs)" value="{{parcelId}}" />
        </div>

        <hr />

        if (!ViewDataTyped.RequireRefresh)
         {
             <div class="row">
                 <div class="col-xs-12 col-sm-3">
                     <div><sup>@Html.Raw(BootstrapHtmlHelpers.RequiredIcon)</sup> Required Field</div>
                 </div>

                 <div class="col-xs-12 col-sm-9" style="text-align: right">
                     <button type="submit" class="btn btn-neptune" value="false" name="@Html.NameFor(x => x.AutoAdvance)">Save</button>
                     <button type="submit" class="btn btn-neptune" value="true" name="@Html.NameFor(x => x.AutoAdvance)">Save &amp; Continue <i class="glyphicon glyphicon-chevron-right"></i></button>
                 </div>
             </div>
         }
    }
    @if (ViewDataTyped.RequireRefresh)
    {
        <div class="row">
            <div class="col-xs-12 col-sm-3">
            </div>
            <div class="col-xs-12 col-sm-9" style="text-align: right">
                <a class="btn btn-neptune" href="@OVTASection.AddOrRemoveParcels.GetNextSectionUrl(ViewDataTyped.OVTA)">Continue <i class="glyphicon glyphicon-chevron-right"></i></a>
            </div>
        </div>
    }
</div>