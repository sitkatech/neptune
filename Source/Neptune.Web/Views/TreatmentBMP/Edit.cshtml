@*-----------------------------------------------------------------------
    <copyright file="Edit.cshtml" company="Tahoe Regional Planning Agency">
    Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using Neptune.Web.Views.Shared
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.Models
@using Neptune.Web.Models
@inherits Neptune.Web.Views.TreatmentBMP.Edit

@section JavascriptAndStylesContent
{
    @{ MapJavascriptIncludes.RenderPartialView(Html); }
    <script src="@Url.Content("~/ScriptsCustom/Maps/NeptuneMaps.Stormwater.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/leaflet/leaflet.legend/leaflet-legend.js")" type="text/javascript"></script>
    <link href="@Url.Content("~/Content/leaflet/leaflet.legend/leaflet-legend.css")" rel="stylesheet" type="text/css"/>
    
    <script>
        jQuery(document).ready(function() {
            if (jQuery("#@Html.IdFor(m=>m.TreatmentBMPLifespanTypeID)").val() == @(TreatmentBMPLifespanType.FixedEndDate.TreatmentBMPLifespanTypeID)) {
                jQuery("#treatmentBMPLifespanEndDateContainer").show();
            } else {
                jQuery("#treatmentBMPLifespanEndDateContainer").hide();
            }

            jQuery("#@Html.IdFor(m=>m.TreatmentBMPLifespanTypeID)").change(function() {
                if (jQuery("#@Html.IdFor(m=>m.TreatmentBMPLifespanTypeID)").val() == @(TreatmentBMPLifespanType.FixedEndDate.TreatmentBMPLifespanTypeID)) {
                    jQuery("#treatmentBMPLifespanEndDateContainer").show();
                } else {
                    jQuery("#treatmentBMPLifespanEndDateContainer").hide();
                }
            })
        })
    </script>
}

@using (Html.BeginForm())
{
    <div class="formPage">
        <div class="row">
            <div class="col-xs-12">
                <div class="validationError">
                    @Html.ValidationSummary()
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-horizontal">
                <div class="form-group">
                    <div class="col-xs-12 col-sm-2 control-label">
                        @Html.LabelWithSugarFor(m => m.TreatmentBMPName)
                    </div>
                    <div class="col-xs-12 col-sm-4">
                        @Html.TextBoxFor(m => m.TreatmentBMPName, new {style = "width: auto", @class = "form-control"})
                        @Html.ValidationMessageFor(m => m.TreatmentBMPName)
                    </div>
                    <div class="col-xs-12 col-sm-2 control-label">
                        @Html.LabelWithSugarFor(m => m.TreatmentBMPTypeID)
                    </div>
                    <div class="col-xs-12 col-sm-4">
                        @if (!ModelObjectHelpers.IsRealPrimaryKeyValue(Model.TreatmentBMPID))
                        {
                            @Html.SearchableDropDownListFor(m => m.TreatmentBMPTypeID, ViewDataTyped.TreatmentBMPTypeSelectListItems)
                            @Html.ValidationMessageFor(m => m.TreatmentBMPTypeID)
                        }
                        else
                        {
                            <p class="form-control-static">@ViewDataTyped.TreatmentBMP.TreatmentBMPType.TreatmentBMPTypeName</p>
                            @Html.HiddenFor(m => m.TreatmentBMPTypeID)
                        }
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-12 col-sm-2 control-label">
                        @Html.LabelWithSugarFor(m => m.StormwaterJurisdictionID, "Jurisdiction")
                    </div>
                    <div class="col-xs-12 col-sm-4">
                        @if (!ModelObjectHelpers.IsRealPrimaryKeyValue(Model.TreatmentBMPID))
                        {
                            @Html.SearchableDropDownListFor(m => m.StormwaterJurisdictionID, ViewDataTyped.StormwaterJurisdictionSelectListItems)
                            @Html.ValidationMessageFor(m => m.StormwaterJurisdictionID)
                        }
                        else
                        {
                            <p class="form-control-static">@ViewDataTyped.TreatmentBMP.StormwaterJurisdiction.GetOrganizationDisplayName()</p>
                            @Html.HiddenFor(x => x.StormwaterJurisdictionID)
                        }
                    </div>
                    <div class="col-xs-12 col-sm-2 control-label">
                        @Html.LabelWithSugarFor(m => m.OwnerOrganizationID)
                    </div>
                    <div class="col-xs-12 col-sm-4">
                        @Html.SearchableDropDownListFor(m => m.OwnerOrganizationID, ViewDataTyped.OwnerOrganizationSelectListItems)
                        @Html.ValidationMessageFor(m => m.OwnerOrganizationID)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-12 col-sm-2 control-label">
                        @Html.LabelWithSugarFor(m => m.YearBuilt)
                    </div>
                    <div class="col-xs-12 col-sm-4">
                        @Html.TextBoxFor(m => m.YearBuilt, new {style = "width: auto", @class = "form-control", type = "number"})
                        @Html.ValidationMessageFor(m => m.YearBuilt)
                    </div>
                    <div class="col-xs-12 col-sm-2 control-label">
                        @Html.LabelWithSugarFor(m => m.SystemOfRecordID)
                    </div>
                    <div class="col-xs-12 col-sm-4">
                        @Html.TextBoxFor(m => m.SystemOfRecordID, new {style = "width: auto", @class = "form-control"})
                        @Html.ValidationMessageFor(m => m.SystemOfRecordID)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-12 col-sm-2 control-label">
                        @Html.LabelWithSugarFor(m => m.WaterQualityManagementPlanID)
                    </div>
                    <div class="col-xs-12 col-sm-4">
                        @Html.SearchableDropDownListFor(m => m.WaterQualityManagementPlanID, ViewDataTyped.WaterQualityManagementPlanSelectListItems)
                        @Html.ValidationMessageFor(m => m.WaterQualityManagementPlanID)
                    </div>
                    <div class="col-xs-12 col-sm-2 control-label">
                        @Html.LabelWithSugarFor(m => m.TreatmentBMPLifespanTypeID)
                    </div>
                    <div class="col-xs-12 col-sm-4">
                        @Html.SearchableDropDownListFor(m => m.TreatmentBMPLifespanTypeID, ViewDataTyped.TreatmentBMPLifespanTypes)
                        @Html.ValidationMessageFor(m => m.TreatmentBMPLifespanTypeID)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-12 col-sm-2 control-label">
                        @* placeholder space *@
                    </div>
                    <div class="col-xs-12 col-sm-4">
                        @* placeholder space *@
                    </div>
                    <div id="treatmentBMPLifespanEndDateContainer">
                        <div class="col-xs-12 col-sm-2 control-label">
                            @Html.LabelWithSugarFor(m => m.TreatmentBMPLifespanEndDate)
                        </div>
                        <div class="col-xs-12 col-sm-4">
                            @Html.EditorFor(m => m.TreatmentBMPLifespanEndDate)
                            @Html.ValidationMessageFor(m => m.TreatmentBMPLifespanEndDate)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <hr/>
        <div class="row">
            <div class="col-xs-12">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-2 control-label">
                            <label>Notes</label>
                        </div>
                        <div class="col-xs-12 col-sm-10">
                            @Html.ValidationMessageFor(x => x.Notes)
                            @Html.TextAreaWithMaxLengthFor(x => x.Notes, new TextAreaForExtensions.TextAreaDimensions(null, 4), null, new List<string> {"form-control"})
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12" style="text-align: right">
                <hr/>
                <button action="p" type="submit" class="btn btn-neptune">Save</button>
                <a href="@ViewDataTyped.TreatmentBMPIndexUrl" class="btn btn-neptune">Cancel</a>
            </div>
            @Html.HiddenFor(x => x.TreatmentBMPID)
        </div>
    </div>
}