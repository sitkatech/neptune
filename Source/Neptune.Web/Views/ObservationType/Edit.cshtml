@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.HtmlHelperExtensions
@using Neptune.Web.Common
@using Neptune.Web.Controllers
@using Neptune.Web.Models
@using Neptune.Web.Views.Shared
@using Newtonsoft.Json.Linq
@inherits Neptune.Web.Views.ObservationType.Edit

<script type="text/javascript" src="@Url.Content("~/Views/ObservationType/EditObservationTypeController.js")"></script>
<script type="text/javascript">
    // <![CDATA[
    angular.module("NeptuneApp")
        .factory("angularModelAndViewData",
            function()
            {
                return {
                    AngularModel: @Html.Raw(JObject.FromObject(Model)),
                    AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular))
                };
            });

    // ]]>
</script>

@{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.ViewInstructionsNeptunePage); }

<form method="POST" action="@ViewDataTyped.SubmitUrl" ng-app="NeptuneApp" id="EditObservationTypeControllerApp" ng-controller="EditObservationTypeController" ng-submit="submit()" name="observationTypeForm">
    <div class="formPage">
        <div class="row">
            <div class="col-xs-12">
                <div class="validationError">
                    @Html.ValidationSummary()
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.ObservationTypeName)
                        </div>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(m => m.ObservationTypeName, new { @class = "form-control", style = "width:100%" })
                            @Html.ValidationMessageFor(m => m.ObservationTypeName)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.ObservationTypeCollectionMethodID)
                        </div>
                        <div class="col-sm-9">
                            <select class="form-control"
                                    style="width: auto"
                                    name="ObservationTypeCollectionMethodID"
                                    ng-model="ObservationTypeCollectionMethodID"
                                    ng-change="updateCollectionMethod()"
                                    ng-required="true">
                                <option value=""></option>
                                <option ng-repeat="observationTypeCollectionMethod in AngularViewData.ObservationTypeCollectionMethods"
                                        ng-selected="AngularModel.ObservationTypeCollectionMethodID == observationTypeCollectionMethod.ID"
                                        ng-value="observationTypeCollectionMethod.ID"
                                        title="{{observationTypeCollectionMethod.Definition}}">
                                    {{observationTypeCollectionMethod.DisplayName}}
                                </option>
                            </select>
                            @Html.ValidationMessageFor(m => m.ObservationTypeCollectionMethodID)
                            <div class="help-block">
                                <span ng-if="ObservationTypeCollectionMethodSelected == null">The @FieldDefinition.ObservationCollectionMethod.GetFieldDefinitionLabel() is the template used to define the Observation Type.</span>
                                <span ng-if="ObservationTypeCollectionMethodSelected != null">{{getObservationCollectionMethod(ObservationTypeCollectionMethodID).Definition}}</span>
                            </div>
                        </div>
                    </div>
                    <div ng-if="selectedCollectionMethodHasBenchmarkAndThresholds()">
                        <div class="form-group">
                            <div class="col-sm-3 control-label">
                                @Html.LabelWithSugarFor(m => m.ObservationThresholdTypeID)
                            </div>
                            <div class="col-sm-9">
                                <select style="width: auto" ng-model="AngularModel.ObservationThresholdTypeID"
                                        name="@Html.NameFor(m => m.ObservationThresholdTypeID)"
                                        class="form-control"
                                        ng-required="true">
                                    <option value="null"></option>
                                    <option ng-repeat="type in filteredThresholdTypes()"
                                            ng-selected="AngularModel.ObservationThresholdTypeID == type.ID"
                                            ng-bind="type.DisplayName"
                                            value="{{type.ID}}"></option>
                                </select>
                                @Html.ValidationMessageFor(m => m.ObservationThresholdTypeID)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3 control-label">
                                @Html.LabelWithSugarFor(m => m.ObservationTargetTypeID)
                            </div>
                            <div class="col-sm-9">
                                <select style="width: auto" ng-model="AngularModel.ObservationTargetTypeID"
                                        name="@Html.NameFor(m => m.ObservationTargetTypeID)"
                                        class="form-control"
                                        ng-required="true">
                                    <option value="null"></option>
                                    <option ng-repeat="type in filteredTargetTypes()"
                                            ng-selected="AngularModel.ObservationTargetTypeID == type.ID"
                                            ng-bind="type.DisplayName"
                                            value="{{type.ID}}"></option>
                                </select>
                                @Html.ValidationMessageFor(m => m.ObservationTargetTypeID)
                            </div>
                        </div>
                    </div>
                    <hr />
                    <h4>Enter Data Collection Instructions</h4>
                    <div ng-if="ObservationTypeCollectionMethodSelected == null">
                        <div class="help-block">
                            Select a @FieldDefinition.ObservationCollectionMethod.GetFieldDefinitionLabel() to enter the required Instructions
                        </div>
                    </div>                    
                    <div ng-if="ObservationTypeCollectionMethodSelected != null">
                        @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.ViewObservationInstructionsNeptunePage); }
                        <div class="form-group">
                            <div class="col-sm-3 control-label">
                                @Html.LabelWithRequiredTagFor("Assessment Instructions")
                            </div>
                            <div class="col-sm-9">
                                <textarea class="form-control" data-val="true"
                                          data-val-length-max="300"
                                          ng-model="ObservationTypeSchema.AssessmentDescription"
                                          onkeydown="Sitka.Methods.keepTextAreaWithinMaxLength(this, 300, 20, 'CharactersRemaining_AssessmentDescription', 'Characters Remaining: ');"
                                          onkeyup="Sitka.Methods.keepTextAreaWithinMaxLength(this, 300, 20, 'CharactersRemaining_AssessmentDescription', 'Characters Remaining: ')"
                                          rows="3"
                                          style="width: 100%; resize: none;"
                                          placeholder="Assessment instructions will appear when a user is entering observed values for this observation type"></textarea>
                                <div id="CharactersRemaining_AssessmentDescription" style="font-size: 10px; text-align: right; color: #666666;">Characters Remaining: 300</div>
                            </div>
                        </div>
                    </div>
                    <div ng-if="selectedCollectionMethodHasBenchmarkAndThresholds()">
                        <div class="form-group">
                            <div class="col-sm-3 control-label">
                                @Html.LabelWithRequiredTagFor("Benchmark Instructions")
                            </div>
                            <div class="col-sm-9">
                                <textarea class="form-control" data-val="true"
                                          data-val-length-max="300"
                                          ng-model="ObservationTypeSchema.BenchmarkDescription"
                                          onkeydown="Sitka.Methods.keepTextAreaWithinMaxLength(this, 300, 20, 'CharactersRemaining_BenchmarkDescription', 'Characters Remaining: ');"
                                          onkeyup="Sitka.Methods.keepTextAreaWithinMaxLength(this, 300, 20, 'CharactersRemaining_BenchmarkDescription', 'Characters Remaining: ')"
                                          rows="3"
                                          style="width: 100%; resize: none;"
                                          placeholder="Benchmark instructions will appear when setting the Benchmark Value for a BMP that uses this Observation Type"></textarea>
                                <div id="CharactersRemaining_BenchmarkDescription" style="font-size: 10px; text-align: right; color: #666666;">Characters Remaining: 300</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3 control-label">
                                @Html.LabelWithRequiredTagFor("Threshold Instructions")
                            </div>
                            <div class="col-sm-9">
                                <textarea class="form-control" data-val="true"
                                          data-val-length-max="300"
                                          ng-model="ObservationTypeSchema.ThresholdDescription"
                                          onkeydown="Sitka.Methods.keepTextAreaWithinMaxLength(this, 300, 20, 'CharactersRemaining_ThresholdDescription', 'Characters Remaining: ');"
                                          onkeyup="Sitka.Methods.keepTextAreaWithinMaxLength(this, 300, 20, 'CharactersRemaining_ThresholdDescription', 'Characters Remaining: ')"
                                          rows="3"
                                          style="width: 100%; resize: none;"
                                          placeholder="Threshold instructions will appear when setting the Theshold Value for a BMP that uses this Observation Type"></textarea>
                                <div id="CharactersRemaining_ThresholdDescription" style="font-size: 10px; text-align: right; color: #666666;">Characters Remaining: 300</div>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <h4>Enter Labels and Units for Data Collection</h4>
                <div ng-if="ObservationTypeCollectionMethodSelected == null">
                    <div class="help-block">
                        Select a @FieldDefinition.ObservationCollectionMethod.GetFieldDefinitionLabel() to enter the required Labels and Units
                    </div>
                </div>
                <div ng-if="ObservationTypeCollectionMethodSelected != null">
                    @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.ViewLabelsAndUnitsInstructionsNeptunePage); }
                </div>
                    <div ng-if="selectedCollectionMethodIsDiscrete()">                        
                        <div class="form-group">
                            <div class="col-sm-3 control-label">
                                @Html.LabelWithSugarFor(FieldDefinition.PropertiesToObserve, true)
                            </div>
                            <div class="col-sm-9">
                                <div class="row">
                                    <div ng-repeat="item in ObservationTypeSchema.PropertiesToObserve track by $index" style="margin-bottom: 4px" class="col-xs-12 col-sm-4">
                                        <input class="form-control"
                                               ng-model="ObservationTypeSchema.PropertiesToObserve[$index]"
                                               style="width: 85%"
                                               type="text"
                                               value="{{ObservationTypeSchema.PropertiesToObserve[$index]}}"
                                               placeholder="e.g. Staff Plate, Number of Trees">
                                        <a class="btn" style="padding-left: 4px"><span class="glyphicon glyphicon-remove" ng-click="removeInput($index)"></span></a>
                                    </div>
                                    <div class="col-xs-12 col-sm-4">
                                        <button class="btn btn-neptune" type="button" ng-click="addInput()"><span class="glyphicon glyphicon-plus"></span> Add</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithSugarFor(FieldDefinition.MeasurementUnitLabel, true)
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="text" ng-model="ObservationTypeSchema.MeasurementUnitLabel" placeholder="e.g. Height, Count"/>
                            </div>
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithSugarFor(FieldDefinition.MeasurementUnit, true)
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <select style="width: auto" ng-model="ObservationTypeSchema.MeasurementUnitTypeID"
                                        class="form-control">
                                    <option ng-repeat="type in AngularViewData.MeasurementUnitTypes"
                                            ng-selected="ObservationTypeSchema.MeasurementUnitTypeID == type.ID"
                                            ng-bind="type.DisplayName"
                                            value="{{type.ID}}"></option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithSugarFor(FieldDefinition.MinimumNumberOfObservations, true)
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="number" ng-model="ObservationTypeSchema.MinimumNumberOfObservations" step="1" min="0" />
                            </div>
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithSugarFor(FieldDefinition.MaximumNumberOfObservations)
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="number" ng-model="ObservationTypeSchema.MaximumNumberOfObservations" step="1" min="0" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-3 col-sm-3 control-label" style="padding-left: 5px;">
                                @Html.LabelWithSugarFor(FieldDefinition.MinimumValueOfEachObservation, true)
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="number" ng-model="ObservationTypeSchema.MinimumValueOfObservations" />
                            </div>
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithSugarFor(FieldDefinition.MaximumValueOfEachObservation)
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="number" ng-model="ObservationTypeSchema.MaximumValueOfObservations" />
                            </div>
                        </div>
                    </div>
                    <div ng-if="selectedCollectionMethodIsRate()">
                        <div class="form-group">
                            <div class="col-sm-3 control-label">
                                @Html.LabelWithSugarFor(FieldDefinition.PropertiesToObserve, true)
                            </div>
                            <div class="col-sm-9">
                                <div class="row">
                                    <div ng-repeat="item in ObservationTypeSchema.PropertiesToObserve track by $index" style="margin-bottom: 4px" class="col-xs-12 col-sm-4">
                                        <input class="form-control" 
                                               ng-model="ObservationTypeSchema.PropertiesToObserve[$index]" 
                                               style="width: 85%" 
                                               type="text" 
                                               value="{{ObservationTypeSchema.PropertiesToObserve[$index]}}"
                                               placeholder="e.g. Infiltrometer, CHP">
                                        <a class="btn" style="padding-left: 4px"><span class="glyphicon glyphicon-remove" ng-click="removeInput($index)"></span></a>
                                    </div>
                                    <div class="col-xs-12 col-sm-4">
                                        <button class="btn btn-neptune" type="button" ng-click="addInput()"><span class="glyphicon glyphicon-plus"></span> Add</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />                        
                        <h5>Label and units for data to be collected as rates</h5>
                        <div class="form-group">
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithRequiredTagFor("Label for Data Entered as Rate")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="text" ng-model="ObservationTypeSchema.DiscreteRateMeasurementUnitLabel" placeholder="e.g. Infiltration Rate"/>
                            </div>
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithRequiredTagFor("Unit for Data Entered as Rate")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <select style="width: auto" ng-model="ObservationTypeSchema.DiscreteRateMeasurementUnitTypeID"
                                        class="form-control">
                                    <option ng-repeat="type in AngularViewData.MeasurementUnitTypes"
                                            ng-selected="ObservationTypeSchema.DiscreteRateMeasurementUnitTypeID == type.ID"
                                            ng-bind="type.DisplayName"
                                            value="{{type.ID}}"></option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithRequiredTagFor("Minimum Number of Rate Observations")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="number" ng-model="ObservationTypeSchema.DiscreteRateMinimumNumberOfObservations" step="1" min="0" />
                            </div>
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.Label("Maximum Number of Rate Observations")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="number" ng-model="ObservationTypeSchema.DiscreteRateMaximumNumberOfObservations" step="1" min="0" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithRequiredTagFor("Minimum Value of Each Rate Observation")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="number" ng-model="ObservationTypeSchema.DiscreteRateMinimumValueOfObservations" />
                            </div>
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.Label("Maximum Value of Each Rate Observation")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="number" ng-model="ObservationTypeSchema.DiscreteRateMaximumValueOfObservations" />
                            </div>
                        </div>
                        <br />
                        <h5>Labels and units for data to be collected as time/value pairs</h5>
                        <div class="form-group">
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithRequiredTagFor("Label for Value Observed")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="text" ng-model="ObservationTypeSchema.ReadingMeasurementUnitLabel" placeholder="e.g. Instrument Reading"/>
                            </div>
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithRequiredTagFor("Unit of Data Value Observed")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <select style="width: auto" ng-model="ObservationTypeSchema.ReadingMeasurementUnitTypeID"
                                        class="form-control">
                                    <option ng-repeat="type in AngularViewData.MeasurementUnitTypes"
                                            ng-selected="ObservationTypeSchema.ReadingMeasurementUnitTypeID == type.ID"
                                            ng-bind="type.DisplayName"
                                            value="{{type.ID}}"></option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithRequiredTagFor("Label for Time")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="text" ng-model="ObservationTypeSchema.TimeMeasurementUnitLabel" placeholder="e.g. Elapsed Time"/>
                            </div>
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithRequiredTagFor("Unit of Time")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <select style="width: auto" ng-model="ObservationTypeSchema.TimeMeasurementUnitTypeID"
                                        class="form-control">
                                    <option ng-repeat="type in AngularViewData.MeasurementUnitTypes"
                                            ng-selected="ObservationTypeSchema.TimeMeasurementUnitTypeID == type.ID"
                                            ng-bind="type.DisplayName"
                                            value="{{type.ID}}"></option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithRequiredTagFor("Minimum Number of Time/Value Observations")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="number" ng-model="ObservationTypeSchema.TimeReadingMinimumNumberOfObservations" step="1" min="0" />
                            </div>
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.Label("Maximum Number Time/Value Observations")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="number" ng-model="ObservationTypeSchema.TimeReadingMaximumNumberOfObservations" step="1" min="0" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithRequiredTagFor("Minimum of Each Data Value")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="number" ng-model="ObservationTypeSchema.TimeReadingMinimumValueOfObservations" />
                            </div>
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.Label("Maximum of Each Data Value")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="number" ng-model="ObservationTypeSchema.TimeReadingMaximumValueOfObservations" />
                            </div>
                        </div>

                    </div>

                    <div ng-if="selectedCollectionMethodIsPassFail()">
                        <input type="hidden" name="@Html.NameFor(m => m.ObservationThresholdTypeID)" value="@ViewDataTyped.PassFailObservationThresholdTypeID" />
                        <input type="hidden" name="@Html.NameFor(m => m.ObservationTargetTypeID)" value="@ViewDataTyped.PassFailObservationTargetTypeID" />
                        <div class="form-group">
                            <div class="col-sm-3 control-label">
                                @Html.LabelWithSugarFor(FieldDefinition.PropertiesToObserve, true)
                            </div>
                            <div class="col-sm-9">
                                <div class="row">
                                    <div ng-repeat="item in ObservationTypeSchema.PropertiesToObserve track by $index" style="margin-bottom: 4px" class="col-xs-12 col-sm-4">
                                        <input class="form-control" ng-model="ObservationTypeSchema.PropertiesToObserve[$index]" style="width: 85%" type="text" value="{{ObservationTypeSchema.PropertiesToObserve[$index]}}" placeholder="e.g. Standing Water Present">
                                        <a class="btn" style="padding-left: 4px"><span class="glyphicon glyphicon-remove" ng-click="removeInput($index)"></span></a>
                                    </div>
                                    <div class="col-xs-12 col-sm-4">
                                        <button class="btn btn-neptune" type="button" ng-click="addInput()"><span class="glyphicon glyphicon-plus"></span> Add</button>
                                    </div>
                                </div>
                            </div>                            
                        </div>
                        <div class="form-group">
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithRequiredTagFor("Label for Passing Score")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="text" ng-model="ObservationTypeSchema.PassingScoreLabel" placeholder="e.g. Pass" />
                            </div>
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithRequiredTagFor("Label for Failing Score")
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="text" ng-model="ObservationTypeSchema.FailingScoreLabel" placeholder="e.g. Fail" />
                            </div>
                        </div>
                    </div>

                    <div ng-if="selectedCollectionMethodIsPercentage()">
                        <div class="form-group">
                            <div class="col-sm-3 control-label">
                                @Html.LabelWithSugarFor(FieldDefinition.PropertiesToObserve, true)
                            </div>
                            <div class="col-sm-9">
                                <div class="row">
                                    <div ng-repeat="item in ObservationTypeSchema.PropertiesToObserve track by $index" style="margin-bottom: 4px" class="col-xs-12 col-sm-4">
                                        <input class="form-control" ng-model="ObservationTypeSchema.PropertiesToObserve[$index]" style="width: 85%" type="text" value="{{ObservationTypeSchema.PropertiesToObserve[$index]}}" placeholder="e.g. Grass Species Cover">
                                        <a class="btn" style="padding-left: 4px"><span class="glyphicon glyphicon-remove" ng-click="removeInput($index)"></span></a>
                                    </div>
                                    <div class="col-xs-12 col-sm-4">
                                        <button class="btn btn-neptune" type="button" ng-click="addInput()"><span class="glyphicon glyphicon-plus"></span> Add</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-3 col-sm-3 control-label">
                                @Html.LabelWithSugarFor(FieldDefinition.MeasurementUnitLabel, true)
                            </div>
                            <div class="col-xs-9 col-sm-3">
                                <input class="form-control" type="text" ng-model="ObservationTypeSchema.MeasurementUnitLabel" placeholder="e.g. Percent Coverage"/>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <hr />
        <div class="col-xs-12 col-sm-2">
            <div><sup>@Html.Raw(BootstrapHtmlHelpers.RequiredIcon)</sup> Required Field</div>
        </div>
        <div class="col-xs-12 col-sm-10" style="text-align: right">
            <button type="submit" class="btn btn-neptune">Save</button>
            <a href="@ViewDataTyped.ObservationTypeIndexUrl" class="btn btn-neptune">Cancel</a>
        </div>
        @Html.HiddenFor(m => m.ObservationTypeID)
        <input type="hidden" name="@Html.NameFor(m => m.ObservationTypeSchema)" ng-value="AngularModel.ObservationTypeSchema" />
    </div>
</form>
