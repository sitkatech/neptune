@using LtInfo.Common
@using LtInfo.Common.BootstrapWrappers
@using Neptune.Web.Views.Shared
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@inherits Neptune.Web.Views.RegionalSubbasin.Index

@section JavascriptAndStylesContent
{
    @{MapJavascriptIncludes.RenderPartialView(Html);}
    <script type="text/javascript">
        var regionalSubbasinMap;
        var selectedFeature;
        jQuery(function() {
            var mapInitJson = @Html.Raw(JObject.FromObject(ViewDataTyped.MapInitJson).ToString(Formatting.None));
            var geoserverUrl = @Html.Raw(ViewDataTyped.GeoServerUrl.ToJS());
            var regionalSubbasinLayerName = @Html.Raw(ViewDataTyped.RegionalSubbasinLayerName.ToJS());

            regionalSubbasinMap = new NeptuneMaps.Map(mapInitJson, "Terrain", geoserverUrl);

            regionalSubbasinMap.wmsParams = regionalSubbasinMap.createWmsParamsWithLayerName(regionalSubbasinLayerName);
            regionalSubbasinMap.wfsParams = regionalSubbasinMap.createWfsParamsWithLayerName(regionalSubbasinLayerName);


            var regionalSubbasinLayer =
                regionalSubbasinMap.addWmsLayer(regionalSubbasinLayerName,
                    "<span><img src='/Content/img/legendImages/regionalSubbasin.png' height='12px' style='margin-bottom:3px;' /> Regional Subbasins</span>",
                    { styles: "network_catchment_wide"}, false);

            regionalSubbasinMap.map.on('click', selectCatchment);
        });

        var selectCatchment = function(evt) {
            var customParams = {
                cql_filter: 'intersects(CatchmentGeometry, POINT(' + evt.latlng.lat + ' ' + evt.latlng.lng + '))'
            }
            selectCatchmentByWFS(customParams, evt.latlng);
        };

        var selectCatchmentByWFS = function(customParams, latlng) {
            if (!Sitka.Methods.isUndefinedNullOrEmpty(selectedFeature)) {
                regionalSubbasinMap.map.removeLayer(selectedFeature);
                regionalSubbasinMap.layerControl.removeLayer(selectedFeature);
            }
                
            var parameters = L.Util.extend(regionalSubbasinMap.wfsParams, customParams);
            SitkaAjax.ajax({
                    url: regionalSubbasinMap.geoserverUrlOWS + L.Util.getParamString(parameters),
                    dataType: 'json',
                    jsonpCallback: 'getJson'
                },
                function(response) {
                    selectedFeature = L.geoJSON(response);
                    console.log(response);
                    console.log(selectedFeature);

                    if (response.features) {
                        var properties = response.features[0].properties;

                        var content = '<dl>' +
                            '<dt>Catchment ID and Detail Link</dt>' +
                            '<dd>' +
                            "<a href='/RegionalSubbasin/Detail/" +
                            properties.RegionalSubbasinID +
                            "'>" +
                            properties.OCSurveyCatchmentID +
                            "</a>" +
                            '</dd>' +
                            '<dt>Downstream Catchment ID</dt>' +
                            '<dd>' +
                            properties.OCSurveyDownstreamCatchmentID +
                            '</dd>' +
                            '<dt>Drain ID</dt>' +
                            '<dd>' +
                            properties.DrainID +
                            '</dd>' +
                            '<dt>Watershed</dt>' +
                            '<dd>' +
                            properties.Watershed +
                            '</dd>' +
                            '</dl>';

                        var popup = L.popup()
                            .setLatLng(latlng)
                            .setContent(content)
                            .openOn(regionalSubbasinMap.map);
                    }
                });
        };


    </script>
}
@section RightOfPageTitle
{
    @if (ViewDataTyped.HasAdminPermissions)
    {
        <a class="btn btn-neptune" href="@ViewDataTyped.RefreshUrl">@BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-refresh") Refresh From OC Survey</a>
    }

}

<div class="row">
    <div class="col-sm-12">
        <div class="neptuneMap" id="@ViewDataTyped.MapInitJson.MapDivID" style="height: 925px;"></div>
    </div>
</div>