@*-----------------------------------------------------------------------
<copyright file="ImageGallery.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using LtInfo.Common.DhtmlWrappers
@using LtInfo.Common.ModalDialog
@using LtInfo.Common.Views
@inherits Neptune.Web.Views.Shared.ImageGallery

<style>
    p.img {
        width: 100%;
        margin-left: auto;
        margin-right: auto;
        text-align: center;
    }

    .img img {
        margin-left: 4px;
    }
</style>

<script type="text/javascript">
    // <![CDATA[
    jQuery(document).ready(function()
    {
        var galleryScope = jQuery("#@ViewDataTyped.GalleryName");
        galleryScope.find(".keyPhotoButton").click(function()
        {
            var selectKeyPhotoButton = jQuery(this);
            var selectKeyPhotoButtonLabel = selectKeyPhotoButton.find("label");
            var selectionMode = selectKeyPhotoButtonLabel.html() === "Done";
            var filmStrip = galleryScope.find("ul.filmStrip");
            var galleryImagesContainer = galleryScope.find(".gallery");
            var galleryImages = filmStrip.find("li");
            var galleryImageEditIcon = galleryScope.find(".EditPhotoButtonClass");
            var galleryImageDeleteIcon = galleryScope.find(".DeletePhotoButtonClass");
            var addPhotoButton = galleryScope.find(".AddPhotoButtonClass");
            if (!selectionMode)
            {
                selectKeyPhotoButtonLabel.html("Done");
                addPhotoButton.hide();
                galleryImageEditIcon.hide();
                galleryImageDeleteIcon.hide();

                galleryImagesContainer.unbind("click.fb"); //unhooks fancybox

                filmStrip.css("background-color", "#BACF9E");
                galleryImages.click(function()
                {
                    var listItem = jQuery(this);
                    filmStrip.find("li .keyPhotoIcon").removeClass("setKeyPhoto");
                    listItem.addClass("setKeyPhoto");
                    listItem.find(".keyPhotoIcon").addClass("setKeyPhoto");
                    return false; //this stops the click from propigating to the a tag.
                });
            }
            else
            {
                selectKeyPhotoButtonLabel.html("Select Key @ViewDataTyped.ImageEntityName");
                addPhotoButton.show();
                galleryImageEditIcon.show();
                galleryImageDeleteIcon.show();

                galleryImagesContainer.fancybox({ "type": "image" }); //hook up fancybox again.

                filmStrip.css("background-color", "transparent"); //reset background color
                galleryImages.unbind("click"); //unbind key image selection event
        }
        });
    });
    // ]]>
</script>

<div id="@ViewDataTyped.GalleryName">
    @if (ViewDataTyped.UserCanAddPhotos)
    {
        <div class="pull-right">
            <span style="display: inline-block; vertical-align: top">
                @ModalDialogFormHelper.ModalDialogFormLink(string.Format("<span class='glyphicon glyphicon-plus-sign' style='margin-right: 3px'></span>Add {0}", ViewDataTyped.ImageEntityName), ViewDataTyped.AddNewPhotoUrl, string.Format("Add New {0}", ViewDataTyped.ImageEntityName), 700, "Upload", "Cancel", new List<string> { "AddPhotoButtonClass", "btn", "btn-neptune" }, null, null)
            </span>
        </div>
    }

    @if (ViewDataTyped.GalleryImages.Any())
    {
        <div>
            <ul class="filmStrip" style="margin-top: 5px;">
                @foreach (var galleryImage in ViewDataTyped.GalleryImages.OrderBy(x => x.OrderBy))
                {
                    <li style="overflow: hidden">
                        <div class="@Html.Raw(string.Join(" ", galleryImage.AdditionalCssClasses).HtmlEncodeWithBreaks())">
                            <div class="icons">
                                <span class="EditPhotoButtonClass">
                                    @ModalDialogFormHelper.MakeEditIconLink(galleryImage.GetEditUrl(), string.Format("Edit {0}", ViewDataTyped.ImageEntityName), ViewDataTyped.UserCanAddPhotos)
                                </span>
                                <span class="DeletePhotoButtonClass">
                                    @ModalDialogFormHelper.MakeDeleteLink(DhtmlxGridHtmlHelpers.DeleteIconBootstrap.ToString(), galleryImage.GetDeleteUrl(), new List<string>(), ViewDataTyped.UserCanAddPhotos)
                                </span>
                                &nbsp;
                            </div>
                            <a class="@(ViewDataTyped.IsGalleryMode ? "gallery" : string.Empty)" rel="group" href="@galleryImage.GetPhotoUrl()" title="@galleryImage.GetCaptionOnFullView()" data-caption="@Html.Raw(galleryImage.GetCaptionOnFullView().HtmlEncode())">
                                <p class="img">
                                    <img src="@galleryImage.PhotoUrlScaledThumbnail(150)" alt="@galleryImage.GetCaptionOnFullView()" />
                                </p>
                                <div class="caption">
                                    @Html.Raw(galleryImage.GetCaptionOnGallery().HtmlEncodeWithBreaks())
                                </div>
                            </a>
                        </div>
                    </li>
                }
            </ul>
        </div>
    }
    else
    {
        <p class="systemText">No @(ViewDataTyped.ImageEntityName)s available.</p>
    }
</div>
