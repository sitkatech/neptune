@*-----------------------------------------------------------------------
<copyright file="EntityNotes.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using Neptune.Web.Views
@using LtInfo.Common
@using LtInfo.Common.DhtmlWrappers
@using LtInfo.Common.ModalDialog
@using LtInfo.Common.Views
@inherits Neptune.Web.Views.Shared.TextControls.EntityNotes

@if (ViewDataTyped.CanEditNotes)
{
    <div class="summaryLayoutUpdateControls"style="float: right">
        <span style="display: inline-block">
            @ModalDialogFormHelper.ModalDialogFormLink(NeptuneDhtmlxGridHtmlHelpers.PlusIcon.ToString(), ViewDataTyped.AddNoteUrl, string.Format("New Note for {0}", ViewDataTyped.EntityName), new List<string>(), ViewDataTyped.CanEditNotes)
        </span>
        <span style="display: inline-block; vertical-align: top">
            @ModalDialogFormHelper.ModalDialogFormLink("Add Note", ViewDataTyped.AddNoteUrl, string.Format("New Note for {0}", ViewDataTyped.EntityName), new List<string>(), ViewDataTyped.CanEditNotes)
        </span>
    </div>
}
@if (ViewDataTyped.Notes.Any())
{
    <table class="summaryLayout">
        @foreach (var entityNote in ViewDataTyped.Notes.OrderByDescending(x => x.LastUpdated))
        {
            <tr class="@entityNote.DisplayCssClass">
                <td class="summaryLayoutUpdateControls">@ModalDialogFormHelper.MakeEditIconLink(entityNote.EditUrl, string.Format("Edit Note for {0}", ViewDataTyped.EntityName), ViewDataTyped.CanEditNotes)</td>
                <td class="summaryLayoutUpdateControls">@ModalDialogFormHelper.MakeDeleteLink(DhtmlxGridHtmlHelpers.DeleteIconBootstrap.ToString(), entityNote.DeleteUrl, new List<string>(), ViewDataTyped.CanEditNotes)</td>
                <td>@entityNote.LastUpdated.ToStringDateTime()</td>
                <td>@entityNote.LastUpdatedBy</td>
                <td>@Html.Raw(entityNote.Note.HtmlEncodeWithBreaks())</td>
            </tr>
        }
    </table>
}
else
{
    <p class="systemText">No Notes entered.</p>
}
