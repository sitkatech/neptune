
@using LtInfo.Common.HtmlHelperExtensions
@using Neptune.Web.Views.Shared.ManagePhotosWithPreview

@inherits ManagePhotosWithPreview
<script type="text/javascript" src="@Url.Content("~/ScriptsCustom/ManagePhotoWithPreview.js")"></script>

<script type="text/javascript" language="javascript">
        // <![CDATA[
        
        jQuery(function() {
            jQuery("#@Html.IdFor(m => m.Photo)").on("change", onChangeFileInput);
            HookupCheckIfFormIsDirtyNoDisable();
        });
        // ]]>
</script>
<style>
    .imagePreviewRibbon {
        position: absolute;
        bottom: 20px;
        left: 30px;
        right: 30px;
        margin-left: auto;
        margin-right: auto;
        background: #f0ad4e;
        background: rgba(240, 173, 78, 0.8);
        color: #f0f0f0;
        line-height: 30px;
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 52px;
        height: 26px;
    }

        .switch input {
            display: none;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .2s;
        transition: .2s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 18px;
            width: 18px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .2s;
            transition: .2s;
        }

    input:checked + .slider {
        background-color: #d9534f;
        border: 1px solid #d43f3a;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #d9534f;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
        left: 3px;
        bottom: 3px;
    }

    .slider.round {
        border-radius: 26px;
    }

        .slider.round:before {
            border-radius: 50%;
        }
</style>
<div class="row">
    <div class="col-xs-12">
        <div class="well">
            <div class="row">
                <div class="col-xs-12 col-sm-6">
                    <div class="form-group">
                        @Html.LabelWithSugarFor(m => m.Photo)
                        @Html.EditorFor(m => m.Photo)
                        <p class="help-block">Allowed extensions: jpg, jpeg, gif, png</p>
                        @Html.ValidationMessageFor(m => m.Photo)
                    </div>
                    <div class="form-group" id="newPhotoCaptionFormGroup" style="display: @(string.IsNullOrWhiteSpace(Model.Caption) ? "none" : "block");">
                        @Html.LabelWithSugarFor(m => m.Caption)
                        @Html.TextAreaWithMaxLengthFor(m => m.Caption, new TextAreaForExtensions.TextAreaDimensions(null, 4), null, new List<string> { "form-control" })
                        @Html.ValidationMessageFor(m => m.Caption)
                    </div>
                </div>
                <div id="fileResourcePhotoPreview" class="col-xs-12 col-sm-6 text-center" style="display: none;">
                    <img src="#" alt="Preview of image to upload." class="col-xs-12 col-sm-6 imagePreview" style="width: 100%;" />
                    <div class="imagePreviewRibbon">Preview</div>
                </div>
            </div>
        </div>
    </div>
</div>
<hr />
<div class="row">
    @if (Model.PhotoSimples == null || !Model.PhotoSimples.Any())
    {
        <div class="col-xs-12">
            <p>
                There are currently no photos uploaded for this Assessment.
            </p>
        </div>
    }
    @for (var i = 0; i < (Model.PhotoSimples != null ? Model.PhotoSimples.Count : 0); i++)
    {
        var photoSimple = Model.PhotoSimples[i];
        var fileResourcePhoto = ViewDataTyped.PhotosByID.ContainsKey(photoSimple.PrimaryKey) ? ViewDataTyped.PhotosByID[photoSimple.PrimaryKey] : null;
        @Html.HiddenFor(m => m.PhotoSimples[i].PrimaryKey)
        <div class="col-xs-12">
            <div class="media">
                <div class="media-left media-middle">
                    <div style="display: block; width: 200px; max-height: 200px;">
                        <a href="@(fileResourcePhoto != null ? fileResourcePhoto.FileResource.GetFileResourceUrl() : null)" class="gallery" rel="group1"
                           data-caption="@(fileResourcePhoto != null ? fileResourcePhoto.Caption : null)" title="@(fileResourcePhoto != null ? fileResourcePhoto.Caption : null)">
                            <img class="media-object" style="margin: auto;"
                                 src="@(fileResourcePhoto != null ? fileResourcePhoto.FileResource.FileResourceUrlScaledThumbnail(200) : null)"
                                 alt="@(fileResourcePhoto != null ? fileResourcePhoto.Caption : null)" />
                        </a>
                    </div>
                </div>
                <div class="media-body">
                    <h4 class="media-heading text-right">@(fileResourcePhoto != null ? fileResourcePhoto.FileResource.GetOriginalCompleteFileName() : null)</h4>
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="col-xs-12 col-sm-4 col-md-2 control-label">
                                @Html.LabelWithSugarFor(m => m.PhotoSimples[i].Caption)
                            </div>
                            <div class="col-xs-12 col-sm-8 col-md-10">
                                @Html.TextAreaWithMaxLengthFor(m => m.PhotoSimples[i].Caption, new TextAreaForExtensions.TextAreaDimensions(null, 2), null, new List<string> { "form-control" })
                                @Html.ValidationMessageFor(m => m.PhotoSimples[i].Caption)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-12 col-sm-4 col-md-2 control-label">
                                @Html.LabelWithSugarFor(m => m.PhotoSimples[i].FlagForDeletion)
                            </div>
                            <div class="col-xs-12 col-sm-8 col-md-10">
                                <label class="switch" for="@Html.IdFor(m => m.PhotoSimples[i].FlagForDeletion)">
                                    <input type="checkbox" value="True"
                                           name="@Html.NameFor(m => m.PhotoSimples[i].FlagForDeletion)"
                                           id="@Html.IdFor(m => m.PhotoSimples[i].FlagForDeletion)" />
                                    <span class="slider round"></span>
                                </label>
                                @Html.ValidationMessageFor(m => m.PhotoSimples[i].FlagForDeletion)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
