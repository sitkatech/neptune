@*-----------------------------------------------------------------------
<copyright file="SiteLayout.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using SitkaController = Neptune.Web.Common.SitkaController
@inherits Neptune.Web.Views.Shared.SiteLayout

@{
    SetLayout("~/Views/Shared/NavAndHeaderLayout.cshtml", ViewDataTyped);
}

@section JavascriptAndStylesContent
{
    @RenderSection("JavascriptAndStylesContent", false)
}

@section BeforeBodyContainer
{
    @RenderSection("BeforeBodyContainer", false)
}

<div class="container neptuneContent">
    <div class="mainPageHeader">
        
        @* TODO: I'm not happy about the duplication of the RightOfPageTitle section here, but I need to conditionally put the withBreadcrumbTitle class on it and this was the most straightforward way to write it*@
        @if (!string.IsNullOrWhiteSpace(ViewDataTyped.PageTitle) && !string.IsNullOrWhiteSpace(ViewDataTyped.EntityName))
        {
            <div class="rightFloatingInfo withBreadcrumbTitle">
                @RenderSection("RightOfPageTitle", false)
            </div>

            <div class="breadcrumbTitle arrow firstArrow current">
                <a href="@ViewDataTyped.EntityUrl">@ViewDataTyped.EntityName</a>
            </div>
            <div class="breadcrumbTitle arrow lastArrow default" title="@ViewDataTyped.PageTitle">@ViewDataTyped.PageTitle</div>
        }
        else if (!string.IsNullOrWhiteSpace(ViewDataTyped.PageTitle))
        {
            <div class="rightFloatingInfo">
                @RenderSection("RightOfPageTitle", false)
            </div>

            <h2>@ViewDataTyped.PageTitle</h2>
        }
    </div>

    @if (TempData.ContainsKey(SitkaController.StatusErrorIndex))
    {
        <div class="alert alert-danger alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            @Html.Raw(TempData[SitkaController.StatusErrorIndex])
        </div>
    }
    @if (TempData.ContainsKey(SitkaController.StatusMessageIndex))
    {
        <div class="alert alert-success alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            @Html.Raw(TempData[SitkaController.StatusMessageIndex])
        </div>
    }
    @if (TempData.ContainsKey(SitkaController.InfoMessageIndex))
    {
        <div class="alert alert-info alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            @Html.Raw(TempData[SitkaController.InfoMessageIndex])
        </div>
    }

    @RenderBody()
</div>
