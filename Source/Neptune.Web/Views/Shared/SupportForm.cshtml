@*-----------------------------------------------------------------------
<copyright file="SupportForm.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using Neptune.Web.Views.Shared
@using LtInfo.Common.HtmlHelperExtensions
@using Newtonsoft.Json.Linq
@inherits SupportForm
@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(x => x.RequestPersonName)
            </div>
            <div class="col-sm-9">
                @if (ViewDataTyped.IsUserAnonymous)
                {
                    @Html.TextBoxFor(x => x.RequestPersonName, new { style = "width:100%", @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.RequestPersonName)
                }
                else
                {
                    <div class="form-control-static">@Model.RequestPersonName</div>
                    @Html.HiddenFor(x => x.RequestPersonName)
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(x => x.RequestPersonEmail)
            </div>
            <div class="col-sm-9">
                @if (ViewDataTyped.IsUserAnonymous)
                {
                    @Html.TextBoxFor(x => x.RequestPersonEmail, new { style = "width:100%", @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.RequestPersonEmail)
                }
                else
                {
                <div class="form-control-static">@Model.RequestPersonEmail</div>
                    @Html.HiddenFor(x => x.RequestPersonEmail)
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(x => x.RequestPersonOrganization) (optional)
            </div>
            <div class="col-sm-9">
                @Html.TextBoxFor(x => x.RequestPersonOrganization, new { style = "width:100%", @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(x => x.RequestPersonPhone) (optional)
            </div>
            <div class="col-sm-9">
                @Html.TextBoxFor(x => x.RequestPersonPhone, new { style = "width:auto", @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(x => x.SupportRequestTypeEnum)
            </div>
            <div class="col-sm-9">
                @Html.DropDownListFor(x => x.SupportRequestTypeEnum, ViewDataTyped.SupportRequestTypes, new { style = "width:100%", @class = "form-control" })
                @Html.ValidationMessageFor(x => x.SupportRequestTypeEnum)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(x => x.RequestDescription)
            </div>
            <div class="col-sm-9">
                @Html.TextAreaWithMaxLengthFor(x => x.RequestDescription, new TextAreaForExtensions.TextAreaDimensions(null, 8), null, new List<string>() { "form-control" })
                @Html.ValidationMessageFor(x => x.RequestDescription)
            </div>
        </div>
        @Html.HiddenFor(x => x.CurrentPageUrl)

        @if (ViewDataTyped.IsUserAnonymous)
        {
        <div style="margin-bottom: 5px">
            This question is testing whether you are a human visitor and to prevent automated spam submissions:
        </div>
        SitkaRecaptcha.RenderPartialView(Html);
        }
    </div>
    
}
