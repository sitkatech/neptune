@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.HtmlHelperExtensions
@using Microsoft.Ajax.Utilities
@using Neptune.Web.Views.FieldVisit

@inherits AssessmentPhotos

@{ @SetLayout("SiteLayout.cshtml", ViewDataTyped) }

@section JavascriptAndStylesContent
{
    <script type="text/javascript" language="javascript">
        // <![CDATA[
        function onLoadFileReader(event) {
            var treatmentBmpAssessmentPhotoPreview = jQuery("#treatmentBmpAssessmentPhotoPreview");
            treatmentBmpAssessmentPhotoPreview.find("img").attr("src", event.target.result);
            treatmentBmpAssessmentPhotoPreview.show();

            var newPhotoCaptionFormGroup = jQuery("#newPhotoCaptionFormGroup");
            newPhotoCaptionFormGroup.show();
        }
        function onChangeFileInput(event) {
            var file = event.target.files ? event.target.files[0] : null;
            if (file) {
                var fileReader = new FileReader();
                fileReader.onload = onLoadFileReader;
                fileReader.readAsDataURL(file);
            } else {
                var treatmentBmpAssessmentPhotoPreview = jQuery("#treatmentBmpAssessmentPhotoPreview");
                treatmentBmpAssessmentPhotoPreview.find("img").attr("src", "#");
                treatmentBmpAssessmentPhotoPreview.hide();
                
                var newPhotoCaptionFormGroup = jQuery("#newPhotoCaptionFormGroup");
                newPhotoCaptionFormGroup.find(":input").val("");
                newPhotoCaptionFormGroup.hide();
            }
        }
        jQuery(function() {
            jQuery("#@Html.IdFor(m => m.Photo)").on("change", onChangeFileInput);
        });
        // ]]>
    </script>
    <style>
        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }
        .switch input { display: none; }
        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            -webkit-transition: .2s;
            transition: .2s;
        }
        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .2s;
            transition: .2s;
        }
        input:checked + .slider {
            background-color: #d9534f;
            border: 1px solid #d43f3a;
        }
        input:focus + .slider {
            box-shadow: 0 0 1px #d9534f;
        }
        input:checked + .slider:before {
            -webkit-transform: translateX(26px);
            -ms-transform: translateX(26px);
            transform: translateX(26px);
            left: 3px;
            bottom: 3px;
        }
        .slider.round {
            border-radius: 34px;
        }
        .slider.round:before {
            border-radius: 50%;
        }
    </style>
}

<form method="post" enctype="multipart/form-data">
    <div class="row">
        <div class="col-xs-12">
            <div class="well">
                <div class="row">
                    <div class="col-xs-12 col-sm-6">
                        <div class="form-group">
                            @Html.LabelWithSugarFor(m => m.Photo)
                            @Html.EditorFor(m => m.Photo)
                            <p class="help-block">Allowed extensions: jpg, jpeg, gif, png</p>
                            @Html.ValidationMessageFor(m => m.Photo)
                        </div>
                        <div class="form-group" id="newPhotoCaptionFormGroup" style="display: @(string.IsNullOrWhiteSpace(Model.Caption) ? "none" : "block");">
                            @Html.LabelWithSugarFor(m => m.Caption)
                            @Html.TextAreaWithMaxLengthFor(m => m.Caption, new TextAreaForExtensions.TextAreaDimensions(null, 4), null, new List<string>{"form-control"})
                            @Html.ValidationMessageFor(m => m.Caption)
                        </div>
                    </div>
                    <div id="treatmentBmpAssessmentPhotoPreview" class="col-xs-12 col-sm-6 text-center" style="display: none;">
                        <img src="#" alt="Preview of image to upload." class="col-xs-12 col-sm-6" style="width: 100%;"/>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        @if (!Model.TreatmentBmpAssessmentPhotoSimples.Any())
        {
            <div class="col-xs-12">
                <p>
                    There are currently no photos uploaded for this Assessment.
                </p>
            </div>
        }
        @for (var i = 0; i < Model.TreatmentBmpAssessmentPhotoSimples.Count; i++)
        {
            var treatmentBmpAssessmentPhotoSimple = Model.TreatmentBmpAssessmentPhotoSimples[i];
            var treatmentBmpAssessmentPhoto = ViewDataTyped.PhotosByID[treatmentBmpAssessmentPhotoSimple.TreatmentBmpAssessmentPhotoID];
            @Html.HiddenFor(m => m.TreatmentBmpAssessmentPhotoSimples[i].TreatmentBmpAssessmentPhotoID)
            <div class="col-xs-12">
                <div class="media">
                    <div class="media-left media-middle">
                        <div style="display: block; width: 200px; max-height: 200px;">
                            <a href="@treatmentBmpAssessmentPhoto.FileResource.FileResourceUrl" class="gallery" rel="group1" data-caption="@treatmentBmpAssessmentPhoto.Caption" title="@treatmentBmpAssessmentPhoto.Caption">
                                <img class="media-object" style="margin: auto;"
                                     src="@treatmentBmpAssessmentPhoto.FileResource.FileResourceUrlScaledThumbnail(200)"
                                     alt="@treatmentBmpAssessmentPhoto.Caption"/>
                            </a>
                        </div>
                    </div>
                    <div class="media-body">
                        <h4 class="media-heading text-right">@treatmentBmpAssessmentPhoto.FileResource.OriginalCompleteFileName</h4>
                        <div class="form-horizontal">
                            <div class="form-group">
                                <div class="col-xs-12 col-sm-4 col-md-2 control-label">
                                    @Html.LabelWithSugarFor(m => m.TreatmentBmpAssessmentPhotoSimples[i].Caption)
                                </div>
                                <div class="col-xs-12 col-sm-8 col-md-10">
                                    @Html.TextAreaWithMaxLengthFor(m => m.TreatmentBmpAssessmentPhotoSimples[i].Caption, new TextAreaForExtensions.TextAreaDimensions(null, 2), null, new List<string> { "form-control" })
                                    @Html.ValidationMessageFor(m => m.TreatmentBmpAssessmentPhotoSimples[i].Caption)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-xs-12 col-sm-4 col-md-2 control-label">
                                    @Html.LabelWithSugarFor(m => m.TreatmentBmpAssessmentPhotoSimples[i].FlagForDeletion)
                                </div>
                                <div class="col-xs-12 col-sm-8 col-md-10">
                                    <label class="switch" for="@Html.IdFor(m => m.TreatmentBmpAssessmentPhotoSimples[i].FlagForDeletion)">
                                        <input type="checkbox" value="True"
                                               name="@Html.NameFor(m => m.TreatmentBmpAssessmentPhotoSimples[i].FlagForDeletion)"
                                               id="@Html.IdFor(m => m.TreatmentBmpAssessmentPhotoSimples[i].FlagForDeletion)" />
                                        <span class="slider round"></span>
                                    </label>
                                    @Html.ValidationMessageFor(m => m.TreatmentBmpAssessmentPhotoSimples[i].FlagForDeletion)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="row">
        <hr />
        <div class="col-xs-12 col-sm-2">
            <div><sup>@Html.Raw(BootstrapHtmlHelpers.RequiredIcon)</sup> Required Field</div>
        </div>
        <div class="col-xs-12 col-sm-10" style="text-align: right">
            <button type="submit" class="btn btn-neptune" value="false" name="@Html.NameFor(x => x.AutoAdvance)">Save</button>
            <button type="submit" class="btn btn-neptune" value="true" name="@Html.NameFor(x => x.AutoAdvance)">Save &amp; Continue <i class="glyphicon glyphicon-chevron-right"></i></button>
        </div>
    </div>
</form>
