@using LtInfo.Common.HtmlHelperExtensions
@using Neptune.Web.Views.Shared
@inherits Neptune.Web.Views.Help.RequestOrganizationNameChange

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(x => x.RequestPersonName)
            </div>
            <div class="col-sm-9">
                @if (ViewDataTyped.IsUserAnonymous)
                {
                    @Html.TextBoxFor(x => x.RequestPersonName, new { style = "width:100%", @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.RequestPersonName)
                }
                else
                {
                    <div class="form-control-static">@Model.RequestPersonName</div>
                    @Html.HiddenFor(x => x.RequestPersonName)
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(x => x.RequestPersonEmail)
            </div>
            <div class="col-sm-9">
                @if (ViewDataTyped.IsUserAnonymous)
                {
                    @Html.TextBoxFor(x => x.RequestPersonEmail, new { style = "width:100%", @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.RequestPersonEmail)
                }
                else
                {
                    <div class="form-control-static">@Model.RequestPersonEmail</div>
                    @Html.HiddenFor(x => x.RequestPersonEmail)
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(x => x.RequestPersonOrganization) (optional)
            </div>
            <div class="col-sm-9">
                @Html.TextBoxFor(x => x.RequestPersonOrganization, new { style = "width:100%", @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(x => x.RequestPersonPhone) (optional)
            </div>
            <div class="col-sm-9">
                @Html.TextBoxFor(x => x.RequestPersonPhone, new { style = "width:auto", @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(x => x.SupportRequestTypeEnum)
            </div>
            <div class="col-sm-9">
                @Html.DropDownListFor(x => x.SupportRequestTypeEnum, ViewDataTyped.SupportRequestTypes, new { style = "width:100%", @class = "form-control" })
                @Html.ValidationMessageFor(x => x.SupportRequestTypeEnum)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(x => x.RequestDescription)
            </div>
            <div class="col-sm-9">
                @Html.TextAreaWithMaxLengthFor(x => x.RequestDescription, new TextAreaForExtensions.TextAreaDimensions(null, 8), null, new List<string>() { "form-control" })
                @Html.ValidationMessageFor(x => x.RequestDescription)
            </div>
        </div>
        @Html.HiddenFor(x => x.CurrentPageUrl)

        @if (ViewDataTyped.IsUserAnonymous)
        {
            <div style="margin-bottom: 5px">
                This question is testing whether you are a human visitor and to prevent automated spam submissions:
            </div>
            SitkaRecaptcha.RenderPartialView(Html);
        }
    </div>
    <hr>
    <div class="row">
        <div class="col-xs-12" style="text-align: right">
            <button class="btn btn-neptune" style="display: inline-block;" type="submit">
                Submit Request
            </button>
            <a href="@ViewDataTyped.CancelUrl" class="btn btn-neptune" style="display: inline-block;">Cancel</a>
        </div>
    </div>

    @Html.HiddenFor(x => x.ReturnUrl)
}
