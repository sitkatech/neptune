@using LtInfo.Common
@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.HtmlHelperExtensions
@using Neptune.Web.Models
@using Neptune.Web.Views.Shared
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@inherits Neptune.Web.Views.CustomAttributeType.Edit

<script type="text/javascript" src="@Url.Content("~/Views/CustomAttributeType/EditCustomAttributeTypeController.js")"></script>
<script type="text/javascript">
    // <![CDATA[
    angular.module("NeptuneApp")
        .factory("angularModelAndViewData",
            function()
            {
                return {
                    AngularModel: @Html.Raw(JObject.FromObject(Model).ToString(Formatting.None)),
                    AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular).ToString(Formatting.None))
                };
            });
    // ]]>
</script>

@{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.ViewInstructionsNeptunePage); }

<form method="POST" action="@ViewDataTyped.SubmitUrl" ng-app="NeptuneApp" id="EditCustomAttributeTypeControllerApp" ng-controller="EditCustomAttributeTypeController" ng-submit="submit()" name="customAttributeTypeForm" ng-cloak>
    <div class="formPage">
        <div class="row">
            <div class="col-xs-12">
                <div class="validationError">
                    @Html.ValidationSummary()
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.CustomAttributeTypeName)
                        </div>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(m => m.CustomAttributeTypeName, new { @class = "form-control", style = "width:100%" })
                            @Html.ValidationMessageFor(m => m.CustomAttributeTypeName)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.IsRequired)
                        </div>
                        <div class="col-sm-9">
                            @Html.DropDownListFor(m => m.IsRequired, ViewDataTyped.YesNos, new Dictionary<string, object>() { { "style", "width: auto" }, { "class", "form-control" } })
                            @Html.ValidationMessageFor(m => m.IsRequired)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.CustomAttributeTypePurposeID)
                        </div>
                        <div class="col-sm-9">
                            @Html.DropDownListFor(m => m.CustomAttributeTypePurposeID, ViewDataTyped.CustomAttributeTypePurposes, new Dictionary<string, object>() { { "style", "width: auto" }, { "class", "form-control" } })
                            @Html.ValidationMessageFor(m => m.CustomAttributeTypePurposeID)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.CustomAttributeTypeDesription)
                        </div>
                        <div class="col-sm-9">
                            @Html.TextAreaWithMaxLengthFor(m => m.CustomAttributeTypeDesription, new TextAreaForExtensions.TextAreaDimensions(null, 3), null, new List<string> { "form-control" })
                            @Html.ValidationMessageFor(m => m.CustomAttributeTypePurposeID)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.CustomAttributeDataTypeID)
                        </div>
                        <div class="col-sm-9">
                            <select class="form-control"
                                    style="width: auto"
                                    name="CustomAttributeDataTypeID"
                                    ng-model="CustomAttributeDataTypeID"
                                    ng-change="updateCustomAttributeDataType()"
                                    ng-required="true">
                                <option value="">&lt;Choose one&gt;</option>
                                <option ng-repeat="customAttributeDataType in AngularViewData.CustomAttributeDataTypes"
                                        ng-selected="AngularModel.CustomAttributeDataTypeID == customAttributeDataType.ID"
                                        ng-value="customAttributeDataType.ID">
                                    {{customAttributeDataType.DisplayName}}
                                </option>
                            </select>
                            @Html.ValidationMessageFor(m => m.CustomAttributeDataTypeID)
                        </div>
                    </div>
                    <div ng-if="CustomAttributeDataTypeSelected == null">
                        <hr />
                        <div class="help-block">
                            Select a @FieldDefinition.CustomAttributeDataType.GetFieldDefinitionLabel() to enter the required information
                        </div>
                    </div>
                    <div ng-if="CustomAttributeDataTypeSelected != null">
                        
                        <div ng-if="selectedCustomAttributeDataTypeHasMeasurementUnit()">
                            <div class="form-group">
                                <div class="col-sm-3 control-label">
                                    @Html.LabelWithSugarFor(m => m.MeasurementUnitTypeID, true)
                                </div>
                                <div class="col-sm-9">
                                    @Html.DropDownListFor(x => x.MeasurementUnitTypeID, ViewDataTyped.MeasurementUnitTypes, new Dictionary<string, object>() { { "style", "width: auto" }, { "class", "form-control" } })
                                    @Html.ValidationMessageFor(m => m.MeasurementUnitTypeID)
                                </div>
                            </div>
                        </div>
                        <div ng-if="selectedCustomAttributeDataTypeHasOptions()">
                            <div class="form-group">
                                <div class="col-sm-3 control-label">
                                    @Html.LabelWithSugarFor(m => m.CustomAttributeTypeOptionsSchema, true)
                                </div>
                                <div class="col-sm-9">
                                    <div class="row">
                                        <div ng-repeat="item in OptionsSchema track by $index" style="margin-bottom: 4px" class="col-xs-12 col-sm-4">
                                            <input class="form-control"
                                                   ng-model="OptionsSchema[$index]"
                                                   style="width: 85%"
                                                   type="text"
                                                   value="{{OptionsSchema[$index]}}"
                                                   placeholder="e.g. Sand, Compost">
                                            <a class="btn" style="padding-left: 4px"><span class="glyphicon glyphicon-remove" ng-click="removeInput($index)"></span></a>
                                        </div>
                                        <div class="col-xs-12 col-sm-4">
                                            <button class="btn btn-neptune" type="button" ng-click="addInput()"><span class="glyphicon glyphicon-plus"></span> Add</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <hr />
        <div class="col-xs-12 col-sm-2">
            <div><sup>@Html.Raw(BootstrapHtmlHelpers.RequiredIcon)</sup> Required Field</div>
        </div>
        <div class="col-xs-12 col-sm-10" style="text-align: right">
            <button type="submit" class="btn btn-neptune">Save</button>
            <a href="@ViewDataTyped.CustomAttributeTypeIndexUrl" class="btn btn-neptune">Cancel</a>
        </div>
        @Html.HiddenFor(m => m.CustomAttributeTypeID)
        <input type="hidden" name="@Html.NameFor(m => m.CustomAttributeTypeOptionsSchema)" ng-value="AngularModel.CustomAttributeTypeOptionsSchema" />
    </div>
</form>
