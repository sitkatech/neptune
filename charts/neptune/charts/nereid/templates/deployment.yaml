apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nereid.fullname" . }}
  labels:
    {{- include "nereid.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nereid.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }} # roll deployments on every upgrade: https://helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nereid.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
      - name: nereid-data
        azureFile: 
          secretName: nereid-volume-secret
          shareName: nereid
          readOnly: false
      - name: config
        projected:
          sources:
          - configMap:
              name: {{ include "nereid.fullname" . }}-environment-properties-{{ .Values.global.env.name }}-configmap
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nereid.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "/bin/bash" ]
          args: ["/start-reload.sh"]
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          # this startup probe checks the app every 10 seconds to see if it's ready to receive traffic
          # it gives a very generous 5 minutes for nereid to startup. As soon as it is successful
          # the liveness probe kicks into effect.
          startupProbe: 
            httpGet:
              path: /config
              scheme: HTTP
              port: 80
            failureThreshold: 30
            periodSeconds: 10
          # this livenessProbe gets called every 4 seconds, if it fails three times in a row it determines
          # the pod as unreachable and attempts to kill it and start a new pod
          livenessProbe:
            httpGet:
              path: /config
              scheme: HTTP
              port: 80
            periodSeconds: 4
            timeoutSeconds: 5
            failureThreshold: 3
          # this readinessProbe lets kubernetes know that it's fully deployed and can start directing traffic to it
          readinessProbe:
            httpGet:
              path: /config
              scheme: HTTP
              port: 80
          lifecycle:
            preStop:
              exec:
                command: ["sleep","120"]
          volumeMounts:
          - name: nereid-data
            mountPath: /nereid/nereid/data/project_data
            readOnly: false            
          envFrom:
          - configMapRef:
              name: {{ include "nereid.fullname" . }}-{{ .Values.global.env.name }}-configmap
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      terminationGracePeriodSeconds: 131
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
