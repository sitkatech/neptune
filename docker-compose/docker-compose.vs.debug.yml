version: '3.7'

services:
  neptune.webmvc:
    image: neptune/webmvc
    labels:
      - "com.microsoft.visualstudio.targetoperatingsystem=linux"
    build:
      args:
        source: ${DOCKER_BUILD_SOURCE}
    ports:
      - "6211:80"
      - "6212:443"
    environment:
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=6212
      - Kestrel__Certificates__Default__Path=/https/host.docker.internal.pfx
      - Kestrel__Certificates__Default__Password=password#1
    volumes:
      - ~/.aspnet/https:/https:ro
  
  geoserver:
    container_name: neptune_geoserver
    image: kartoza/geoserver:2.16.2
    entrypoint: /bin/bash /opt/geoserver/data_dir/sitka-geoserver-config/scripts/sitka-entry-point.sh
    environment:
      - ENABLE_JSONP=true
      - CATALINA_OPTS=-DALLOW_ENV_PARAMETRIZATION=true
      - STABLE_EXTENSIONS=sqlserver-plugin
      # default login is admin unless a different value is specified here
      - GEOSERVER_ADMIN_USER=admin
      # default password is geoserver unless specified differently in the secret
      - GEOSERVER_ADMIN_PASSWORD_SECRET=/run/secrets/GeoserverAdminPassword.txt
      - GEOSERVER_SQL_SERVER_PASSWORD_SECRET=/run/secrets/GeoserverSqlServerPassword.txt
      - GEOSERVER_CONFIG_DIRECTORY=/opt/geoserver/data_dir
    ports:
      - 127.0.0.1:8780:8080
    volumes:
      - c:/git/sitkatech/neptune/Neptune.GeoServer/data_dir:/opt/geoserver/data_dir
    secrets:
      - GeoserverSqlServerPassword.txt
      - GeoserverAdminPassword.txt

  neptune.api:
    image: neptune/api
    labels:
      - "com.microsoft.visualstudio.targetoperatingsystem=linux"
    build:
      args:
        source: ${DOCKER_BUILD_SOURCE}
    ports:
      - "8211:80"
      - "8212:443"
    environment:
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_HTTPS_PORT=8212
      - Kestrel__Certificates__Default__Path=/https/host.docker.internal.pfx
      - Kestrel__Certificates__Default__Password=password#1
    volumes:
      - ~/.aspnet/https:/https:ro

  neptune.gdalapi:
    image: neptune/gdalapi
    hostname: gdalapi
    labels:
      - "com.microsoft.visualstudio.targetoperatingsystem=linux"
    build:
      args:
        source: ${DOCKER_BUILD_SOURCE}
    ports:
      - "8231:80"
    environment:
      - ASPNETCORE_URLS=http://+:80

  neptune.qgisapi:
    image: neptune/qgisapi
    hostname: qgisapi
    labels:
      - "com.microsoft.visualstudio.targetoperatingsystem=linux"
    build:
      args:
        source: ${DOCKER_BUILD_SOURCE}
    ports:
      - "8232:80"
    environment:
      - ASPNETCORE_URLS=http://+:80

  neptune.celeryworker:
    container_name: nereid_celeryworker
    image: esacontainers.azurecr.io/neptune/celeryworker:v0.10.0rc2
    environment:
      CELERY_BROKER_URL: redis://nereid_redis:6379/0
      CELERY_RESULT_BACKEND: redis://nereid_redis:6379/0
    volumes:
      - c:/Sitka/Neptune/nereid_data:/nereid/nereid/data/project_data
    ports:
      - "8233:5555"

  neptune.flower:
    container_name: nereid_flower
    image: esacontainers.azurecr.io/neptune/flower:v0.10.0rc2
    environment:
      CELERY_BROKER_URL: redis://nereid_redis:6379/0
      CELERY_RESULT_BACKEND: redis://nereid_redis:6379/0

  neptune.nereid:
    container_name: nereid
    image: esacontainers.azurecr.io/neptune/nereid:v0.10.0rc2
    hostname: nereid
    command: bash /start-reload.sh
    volumes:
      - c:/Sitka/Neptune/nereid_data:/nereid/nereid/data/project_data
    ports:
      - "8234:80"
    environment:
      CELERY_BROKER_URL: redis://nereid_redis:6379/0
      CELERY_RESULT_BACKEND: redis://nereid_redis:6379/0
      NEREID_ASYNC_MODE: replace

  neptune.nereid-tests:
    container_name: nereid_tests
    image: esacontainers.azurecr.io/neptune/nereid-tests:v0.10.0rc2
    environment:
      CELERY_BROKER_URL: redis://nereid_redis:6379/0
      CELERY_RESULT_BACKEND: redis://nereid_redis:6379/0
      NEREID_ASYNC_MODE: replace
    volumes:
      - c:/Sitka/Neptune/nereid_data:/nereid/nereid/data/project_data

  neptune.redis:
    container_name: nereid_redis
    image: esacontainers.azurecr.io/neptune/redis:v0.10.0rc2

secrets:
  GeoserverSqlServerPassword.txt:
    file: C:\Sitka\Neptune\Geoserver\GeoserverSqlServerPassword.txt
      # using "file:"  allows you to mimic docker secrets on your dev machine by pointing to a plaintext file
  GeoserverAdminPassword.txt:
    file: C:\Sitka\Neptune\Geoserver\GeoserverAdminPassword.txt