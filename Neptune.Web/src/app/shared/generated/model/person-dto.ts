/**
 * Neptune.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { RoleSimpleDto } from '././role-simple-dto';
import { OrganizationDto } from '././organization-dto';

import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class PersonDto { 
    PersonID?: number;
    PersonGuid?: string;
    FirstName?: string;
    LastName?: string;
    Email?: string;
    Phone?: string;
    Role?: RoleSimpleDto;
    CreateDate?: string;
    UpdateDate?: string;
    LastActivityDate?: string;
    IsActive?: boolean;
    Organization?: OrganizationDto;
    ReceiveSupportEmails?: boolean;
    LoginName?: string;
    ReceiveRSBRevisionRequestEmails?: boolean;
    WebServiceAccessToken?: string;
    IsOCTAGrantReviewer?: boolean;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface PersonDtoForm { 
    PersonID?: FormControl<number>;
    PersonGuid?: FormControl<string>;
    FirstName?: FormControl<string>;
    LastName?: FormControl<string>;
    Email?: FormControl<string>;
    Phone?: FormControl<string>;
    Role?: FormControl<RoleSimpleDto>;
    CreateDate?: FormControl<string>;
    UpdateDate?: FormControl<string>;
    LastActivityDate?: FormControl<string>;
    IsActive?: FormControl<boolean>;
    Organization?: FormControl<OrganizationDto>;
    ReceiveSupportEmails?: FormControl<boolean>;
    LoginName?: FormControl<string>;
    ReceiveRSBRevisionRequestEmails?: FormControl<boolean>;
    WebServiceAccessToken?: FormControl<string>;
    IsOCTAGrantReviewer?: FormControl<boolean>;
}

export class PersonDtoFormControls { 
    public static PersonID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static PersonGuid = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static FirstName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LastName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Email = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Phone = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Role = (value: FormControlState<RoleSimpleDto> | RoleSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<RoleSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CreateDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static UpdateDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LastActivityDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static IsActive = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Organization = (value: FormControlState<OrganizationDto> | OrganizationDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<OrganizationDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ReceiveSupportEmails = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LoginName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ReceiveRSBRevisionRequestEmails = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WebServiceAccessToken = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static IsOCTAGrantReviewer = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
