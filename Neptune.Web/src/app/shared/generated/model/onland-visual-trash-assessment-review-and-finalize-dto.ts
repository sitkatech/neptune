/**
 * Neptune.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { OnlandVisualTrashAssessmentPreliminarySourceIdentificationUpsertDto } from '././onland-visual-trash-assessment-preliminary-source-identification-upsert-dto';

import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class OnlandVisualTrashAssessmentReviewAndFinalizeDto { 
    Finalize?: boolean;
    OnlandVisualTrashAssessmentID?: number;
    OnlandVisualTrashAssessmentAreaID?: number;
    OnlandVisualTrashAssessmentAreaName?: string;
    StormwaterJurisdictionID?: number;
    OnlandVisualTrashAssessmentScoreID?: number;
    OnlandVisualTrashAssessmentStatusID?: number;
    AssessmentAreaDescription?: string;
    AssessingNewArea?: boolean;
    IsProgressAssessment?: boolean;
    Notes?: string;
    AssessmentDate?: string;
    PreliminarySourceIdentifications?: Array<OnlandVisualTrashAssessmentPreliminarySourceIdentificationUpsertDto>;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface OnlandVisualTrashAssessmentReviewAndFinalizeDtoForm { 
    Finalize?: FormControl<boolean>;
    OnlandVisualTrashAssessmentID?: FormControl<number>;
    OnlandVisualTrashAssessmentAreaID?: FormControl<number>;
    OnlandVisualTrashAssessmentAreaName?: FormControl<string>;
    StormwaterJurisdictionID?: FormControl<number>;
    OnlandVisualTrashAssessmentScoreID?: FormControl<number>;
    OnlandVisualTrashAssessmentStatusID?: FormControl<number>;
    AssessmentAreaDescription?: FormControl<string>;
    AssessingNewArea?: FormControl<boolean>;
    IsProgressAssessment?: FormControl<boolean>;
    Notes?: FormControl<string>;
    AssessmentDate?: FormControl<string>;
    PreliminarySourceIdentifications?: FormControl<Array<OnlandVisualTrashAssessmentPreliminarySourceIdentificationUpsertDto>>;
}

export class OnlandVisualTrashAssessmentReviewAndFinalizeDtoFormControls { 
    public static Finalize = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static OnlandVisualTrashAssessmentID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static OnlandVisualTrashAssessmentAreaID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static OnlandVisualTrashAssessmentAreaName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static StormwaterJurisdictionID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static OnlandVisualTrashAssessmentScoreID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static OnlandVisualTrashAssessmentStatusID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AssessmentAreaDescription = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AssessingNewArea = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static IsProgressAssessment = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Notes = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AssessmentDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static PreliminarySourceIdentifications = (value: FormControlState<Array<OnlandVisualTrashAssessmentPreliminarySourceIdentificationUpsertDto>> | Array<OnlandVisualTrashAssessmentPreliminarySourceIdentificationUpsertDto> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<OnlandVisualTrashAssessmentPreliminarySourceIdentificationUpsertDto>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
