/**
 * Neptune.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class LoadGeneratingUnitDto { 
    LoadGeneratingUnitID?: number;
    ModelBasinID?: number | null;
    RegionalSubbasinID?: number | null;
    DelineationID?: number | null;
    WaterQualityManagementPlanID?: number | null;
    IsEmptyResponseFromHRUService?: boolean | null;
    DateHRURequested?: string | null;
    HRULogID?: number | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface LoadGeneratingUnitDtoForm { 
    LoadGeneratingUnitID?: FormControl<number>;
    ModelBasinID?: FormControl<number>;
    RegionalSubbasinID?: FormControl<number>;
    DelineationID?: FormControl<number>;
    WaterQualityManagementPlanID?: FormControl<number>;
    IsEmptyResponseFromHRUService?: FormControl<boolean>;
    DateHRURequested?: FormControl<string>;
    HRULogID?: FormControl<number>;
}

export class LoadGeneratingUnitDtoFormControls { 
    public static LoadGeneratingUnitID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ModelBasinID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static RegionalSubbasinID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static DelineationID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static IsEmptyResponseFromHRUService = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static DateHRURequested = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static HRULogID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
