/**
 * Neptune.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class HRUCharacteristicDto { 
    HRUCharacteristicID?: number;
    LastUpdated?: string;
    LoadGeneratingUnitID?: number;
    HRUEntity?: string | null;
    TreatmentBMPID?: number | null;
    TreatmentBMPName?: string | null;
    WaterQualityManagementPlanID?: number | null;
    WaterQualityManagementPlanName?: string | null;
    RegionalSubbasinID?: number | null;
    RegionalSubbasinName?: string | null;
    HydrologicSoilGroup?: string | null;
    SlopePercentage?: number;
    Area?: number;
    ImperviousAcres?: number;
    HRUCharacteristicLandUseCodeID?: number;
    HRUCharacteristicLandUseCodeDisplayName?: string | null;
    BaselineImperviousAcres?: number;
    BaselineHRUCharacteristicLandUseCodeID?: number;
    BaselineHRUCharacteristicLandUseCodeDisplayName?: string | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface HRUCharacteristicDtoForm { 
    HRUCharacteristicID?: FormControl<number>;
    LastUpdated?: FormControl<string>;
    LoadGeneratingUnitID?: FormControl<number>;
    HRUEntity?: FormControl<string>;
    TreatmentBMPID?: FormControl<number>;
    TreatmentBMPName?: FormControl<string>;
    WaterQualityManagementPlanID?: FormControl<number>;
    WaterQualityManagementPlanName?: FormControl<string>;
    RegionalSubbasinID?: FormControl<number>;
    RegionalSubbasinName?: FormControl<string>;
    HydrologicSoilGroup?: FormControl<string>;
    SlopePercentage?: FormControl<number>;
    Area?: FormControl<number>;
    ImperviousAcres?: FormControl<number>;
    HRUCharacteristicLandUseCodeID?: FormControl<number>;
    HRUCharacteristicLandUseCodeDisplayName?: FormControl<string>;
    BaselineImperviousAcres?: FormControl<number>;
    BaselineHRUCharacteristicLandUseCodeID?: FormControl<number>;
    BaselineHRUCharacteristicLandUseCodeDisplayName?: FormControl<string>;
}

export class HRUCharacteristicDtoFormControls { 
    public static HRUCharacteristicID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LastUpdated = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LoadGeneratingUnitID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static HRUEntity = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static TreatmentBMPID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static TreatmentBMPName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static RegionalSubbasinID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static RegionalSubbasinName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static HydrologicSoilGroup = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static SlopePercentage = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Area = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ImperviousAcres = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static HRUCharacteristicLandUseCodeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static HRUCharacteristicLandUseCodeDisplayName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static BaselineImperviousAcres = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static BaselineHRUCharacteristicLandUseCodeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static BaselineHRUCharacteristicLandUseCodeDisplayName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
