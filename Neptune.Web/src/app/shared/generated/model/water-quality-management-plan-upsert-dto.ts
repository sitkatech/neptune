/**
 * Neptune.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class WaterQualityManagementPlanUpsertDto { 
    StormwaterJurisdictionID?: number;
    WaterQualityManagementPlanLandUseID?: number | null;
    WaterQualityManagementPlanPriorityID?: number | null;
    WaterQualityManagementPlanStatusID?: number | null;
    WaterQualityManagementPlanDevelopmentTypeID?: number | null;
    WaterQualityManagementPlanName?: string | null;
    ApprovalDate?: string | null;
    MaintenanceContactName?: string | null;
    MaintenanceContactOrganization?: string | null;
    MaintenanceContactPhone?: string | null;
    MaintenanceContactAddress1?: string | null;
    MaintenanceContactAddress2?: string | null;
    MaintenanceContactCity?: string | null;
    MaintenanceContactState?: string | null;
    MaintenanceContactZip?: string | null;
    WaterQualityManagementPlanPermitTermID?: number | null;
    HydromodificationAppliesTypeID?: number | null;
    DateOfConstruction?: string | null;
    HydrologicSubareaID?: number | null;
    RecordNumber?: string | null;
    RecordedWQMPAreaInAcres?: number | null;
    TrashCaptureStatusTypeID?: number;
    TrashCaptureEffectiveness?: number | null;
    WaterQualityManagementPlanModelingApproachID?: number;
    LastNereidLogID?: number | null;
    WaterQualityManagementPlanBoundaryNotes?: string | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface WaterQualityManagementPlanUpsertDtoForm { 
    StormwaterJurisdictionID?: FormControl<number>;
    WaterQualityManagementPlanLandUseID?: FormControl<number>;
    WaterQualityManagementPlanPriorityID?: FormControl<number>;
    WaterQualityManagementPlanStatusID?: FormControl<number>;
    WaterQualityManagementPlanDevelopmentTypeID?: FormControl<number>;
    WaterQualityManagementPlanName?: FormControl<string>;
    ApprovalDate?: FormControl<string>;
    MaintenanceContactName?: FormControl<string>;
    MaintenanceContactOrganization?: FormControl<string>;
    MaintenanceContactPhone?: FormControl<string>;
    MaintenanceContactAddress1?: FormControl<string>;
    MaintenanceContactAddress2?: FormControl<string>;
    MaintenanceContactCity?: FormControl<string>;
    MaintenanceContactState?: FormControl<string>;
    MaintenanceContactZip?: FormControl<string>;
    WaterQualityManagementPlanPermitTermID?: FormControl<number>;
    HydromodificationAppliesTypeID?: FormControl<number>;
    DateOfConstruction?: FormControl<string>;
    HydrologicSubareaID?: FormControl<number>;
    RecordNumber?: FormControl<string>;
    RecordedWQMPAreaInAcres?: FormControl<number>;
    TrashCaptureStatusTypeID?: FormControl<number>;
    TrashCaptureEffectiveness?: FormControl<number>;
    WaterQualityManagementPlanModelingApproachID?: FormControl<number>;
    LastNereidLogID?: FormControl<number>;
    WaterQualityManagementPlanBoundaryNotes?: FormControl<string>;
}

export class WaterQualityManagementPlanUpsertDtoFormControls { 
    public static StormwaterJurisdictionID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanLandUseID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanPriorityID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanStatusID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanDevelopmentTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ApprovalDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactOrganization = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactPhone = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactAddress1 = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactAddress2 = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactCity = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactState = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactZip = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanPermitTermID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static HydromodificationAppliesTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static DateOfConstruction = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static HydrologicSubareaID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static RecordNumber = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static RecordedWQMPAreaInAcres = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static TrashCaptureStatusTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static TrashCaptureEffectiveness = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanModelingApproachID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LastNereidLogID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanBoundaryNotes = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
