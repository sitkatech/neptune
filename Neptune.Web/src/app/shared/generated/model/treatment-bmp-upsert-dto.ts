/**
 * Neptune.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class TreatmentBMPUpsertDto { 
    TreatmentBMPID?: number;
    TreatmentBMPName: string;
    TreatmentBMPTypeID: number;
    TreatmentBMPTypeName?: string | null;
    TreatmentBMPModelingTypeID?: number | null;
    StormwaterJurisdictionName?: string | null;
    WatershedName?: string | null;
    Longitude: number;
    Latitude: number;
    Notes?: string;
    ModelingAttributes?: Array<CustomAttributeUpsertDto>;
    AreAllModelingAttributesComplete?: boolean;
    IsFullyParameterized?: boolean;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface TreatmentBMPUpsertDtoForm { 
    TreatmentBMPID?: FormControl<number>;
    TreatmentBMPName: FormControl<string>;
    TreatmentBMPTypeID: FormControl<number>;
    TreatmentBMPTypeName?: FormControl<string>;
    TreatmentBMPModelingTypeID?: FormControl<number>;
    StormwaterJurisdictionName?: FormControl<string>;
    WatershedName?: FormControl<string>;
    Longitude: FormControl<number>;
    Latitude: FormControl<number>;
    Notes?: FormControl<string>;
    ModelingAttributes?: FormControl<Array<CustomAttributeUpsertDto>>;
    AreAllModelingAttributesComplete?: FormControl<boolean>;
    IsFullyParameterized?: FormControl<boolean>;
}

export class TreatmentBMPUpsertDtoFormControls { 
    public static TreatmentBMPID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static TreatmentBMPName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
                Validators.minLength(1),
            ],
        }
    );
    public static TreatmentBMPTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static TreatmentBMPTypeName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static TreatmentBMPModelingTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static StormwaterJurisdictionName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WatershedName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Longitude = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static Latitude = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static Notes = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ModelingAttributes = (value: FormControlState<Array<CustomAttributeUpsertDto>> | Array<CustomAttributeUpsertDto> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<CustomAttributeUpsertDto>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static AreAllModelingAttributesComplete = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static IsFullyParameterized = (value: FormControlState<boolean> | boolean = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<boolean>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
