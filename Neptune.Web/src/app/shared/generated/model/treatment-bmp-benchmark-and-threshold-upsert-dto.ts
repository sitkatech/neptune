/**
 * Neptune.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class TreatmentBMPBenchmarkAndThresholdUpsertDto { 
    TreatmentBMPTypeAssessmentObservationTypeID?: number;
    TreatmentBMPTypeID?: number;
    TreatmentBMPAssessmentObservationTypeID?: number;
    BenchmarkValue?: number;
    ThresholdValue?: number;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface TreatmentBMPBenchmarkAndThresholdUpsertDtoForm { 
    TreatmentBMPTypeAssessmentObservationTypeID?: FormControl<number>;
    TreatmentBMPTypeID?: FormControl<number>;
    TreatmentBMPAssessmentObservationTypeID?: FormControl<number>;
    BenchmarkValue?: FormControl<number>;
    ThresholdValue?: FormControl<number>;
}

export class TreatmentBMPBenchmarkAndThresholdUpsertDtoFormControls { 
    public static TreatmentBMPTypeAssessmentObservationTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static TreatmentBMPTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static TreatmentBMPAssessmentObservationTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static BenchmarkValue = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ThresholdValue = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
