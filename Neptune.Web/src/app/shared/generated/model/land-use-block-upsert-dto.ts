/**
 * Neptune.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class LandUseBlockUpsertDto { 
    PriorityLandUseTypeID: number;
    TrashGenerationRate: number;
    LandUseDescription?: string | null;
    MedianHouseholdIncomeResidential?: number | null;
    MedianHouseholdIncomeRetail?: number | null;
    PermitTypeID: number;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface LandUseBlockUpsertDtoForm { 
    PriorityLandUseTypeID: FormControl<number>;
    TrashGenerationRate: FormControl<number>;
    LandUseDescription?: FormControl<string>;
    MedianHouseholdIncomeResidential?: FormControl<number>;
    MedianHouseholdIncomeRetail?: FormControl<number>;
    PermitTypeID: FormControl<number>;
}

export class LandUseBlockUpsertDtoFormControls { 
    public static PriorityLandUseTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
    public static TrashGenerationRate = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
                Validators.min(0),
                Validators.max(999.9),
            ],
        }
    );
    public static LandUseDescription = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MedianHouseholdIncomeResidential = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MedianHouseholdIncomeRetail = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static PermitTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: true,
            validators: 
            [
                Validators.required,
            ],
        }
    );
}
