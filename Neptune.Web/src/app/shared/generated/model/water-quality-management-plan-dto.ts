/**
 * Neptune.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { WatershedSimpleDto } from './watershed-simple-dto';
import { HydromodificationAppliesTypeDto } from './hydromodification-applies-type-dto';
import { WaterQualityManagementPlanParcelDto } from './water-quality-management-plan-parcel-dto';
import { WaterQualityManagementPlanLandUseDto } from './water-quality-management-plan-land-use-dto';
import { WaterQualityManagementPlanVerifyDto } from './water-quality-management-plan-verify-dto';
import { NereidLogSimpleDto } from './nereid-log-simple-dto';
import { WaterQualityManagementPlanPriorityDto } from './water-quality-management-plan-priority-dto';
import { WaterQualityManagementPlanModelingApproachDto } from './water-quality-management-plan-modeling-approach-dto';
import { WaterQualityManagementPlanDevelopmentTypeDto } from './water-quality-management-plan-development-type-dto';
import { HydrologicSubareaDto } from './hydrologic-subarea-dto';
import { WaterQualityManagementPlanStatusDto } from './water-quality-management-plan-status-dto';
import { WaterQualityManagementPlanBoundaryDto } from './water-quality-management-plan-boundary-dto';
import { StormwaterJurisdictionDto } from './stormwater-jurisdiction-dto';
import { TrashCaptureStatusTypeDto } from './trash-capture-status-type-dto';
import { WaterQualityManagementPlanPermitTermDto } from './water-quality-management-plan-permit-term-dto';
import { WaterQualityManagementPlanDocumentDto } from './water-quality-management-plan-document-dto';


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class WaterQualityManagementPlanDto { 
    WaterQualityManagementPlanID?: number;
    StormwaterJurisdictionID?: number;
    WaterQualityManagementPlanLandUseID?: number | null;
    WaterQualityManagementPlanPriorityID?: number | null;
    WaterQualityManagementPlanStatusID?: number | null;
    WaterQualityManagementPlanDevelopmentTypeID?: number | null;
    WaterQualityManagementPlanName?: string | null;
    ApprovalDate?: string | null;
    MaintenanceContactName?: string | null;
    MaintenanceContactOrganization?: string | null;
    MaintenanceContactPhone?: string | null;
    MaintenanceContactAddress1?: string | null;
    MaintenanceContactAddress2?: string | null;
    MaintenanceContactCity?: string | null;
    MaintenanceContactState?: string | null;
    MaintenanceContactZip?: string | null;
    WaterQualityManagementPlanPermitTermID?: number | null;
    HydromodificationAppliesTypeID?: number | null;
    DateOfConstruction?: string | null;
    HydrologicSubareaID?: number | null;
    RecordNumber?: string | null;
    RecordedWQMPAreaInAcres?: number | null;
    TrashCaptureStatusTypeID?: number;
    TrashCaptureEffectiveness?: number | null;
    WaterQualityManagementPlanModelingApproachID?: number;
    LastNereidLogID?: number | null;
    WaterQualityManagementPlanBoundaryNotes?: string | null;
    StormwaterJurisdiction?: StormwaterJurisdictionDto;
    WaterQualityManagementPlanLandUse?: WaterQualityManagementPlanLandUseDto;
    WaterQualityManagementPlanPriority?: WaterQualityManagementPlanPriorityDto;
    WaterQualityManagementPlanStatus?: WaterQualityManagementPlanStatusDto;
    WaterQualityManagementPlanDevelopmentType?: WaterQualityManagementPlanDevelopmentTypeDto;
    WaterQualityManagementPlanPermitTerm?: WaterQualityManagementPlanPermitTermDto;
    HydromodificationAppliesType?: HydromodificationAppliesTypeDto;
    HydrologicSubarea?: HydrologicSubareaDto;
    WaterQualityManagementPlanModelingApproach?: WaterQualityManagementPlanModelingApproachDto;
    TrashCaptureStatusType?: TrashCaptureStatusTypeDto;
    LastNereidLog?: NereidLogSimpleDto;
    Watershed?: WatershedSimpleDto;
    WaterQualityManagementPlanBoundary?: WaterQualityManagementPlanBoundaryDto;
    WaterQualityManagementPlanDocuments?: Array<WaterQualityManagementPlanDocumentDto> | null;
    WaterQualityManagementPlanParcels?: Array<WaterQualityManagementPlanParcelDto> | null;
    WaterQualityManagementPlanVerifies?: Array<WaterQualityManagementPlanVerifyDto> | null;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface WaterQualityManagementPlanDtoForm { 
    WaterQualityManagementPlanID?: FormControl<number>;
    StormwaterJurisdictionID?: FormControl<number>;
    WaterQualityManagementPlanLandUseID?: FormControl<number>;
    WaterQualityManagementPlanPriorityID?: FormControl<number>;
    WaterQualityManagementPlanStatusID?: FormControl<number>;
    WaterQualityManagementPlanDevelopmentTypeID?: FormControl<number>;
    WaterQualityManagementPlanName?: FormControl<string>;
    ApprovalDate?: FormControl<string>;
    MaintenanceContactName?: FormControl<string>;
    MaintenanceContactOrganization?: FormControl<string>;
    MaintenanceContactPhone?: FormControl<string>;
    MaintenanceContactAddress1?: FormControl<string>;
    MaintenanceContactAddress2?: FormControl<string>;
    MaintenanceContactCity?: FormControl<string>;
    MaintenanceContactState?: FormControl<string>;
    MaintenanceContactZip?: FormControl<string>;
    WaterQualityManagementPlanPermitTermID?: FormControl<number>;
    HydromodificationAppliesTypeID?: FormControl<number>;
    DateOfConstruction?: FormControl<string>;
    HydrologicSubareaID?: FormControl<number>;
    RecordNumber?: FormControl<string>;
    RecordedWQMPAreaInAcres?: FormControl<number>;
    TrashCaptureStatusTypeID?: FormControl<number>;
    TrashCaptureEffectiveness?: FormControl<number>;
    WaterQualityManagementPlanModelingApproachID?: FormControl<number>;
    LastNereidLogID?: FormControl<number>;
    WaterQualityManagementPlanBoundaryNotes?: FormControl<string>;
    StormwaterJurisdiction?: FormControl<StormwaterJurisdictionDto>;
    WaterQualityManagementPlanLandUse?: FormControl<WaterQualityManagementPlanLandUseDto>;
    WaterQualityManagementPlanPriority?: FormControl<WaterQualityManagementPlanPriorityDto>;
    WaterQualityManagementPlanStatus?: FormControl<WaterQualityManagementPlanStatusDto>;
    WaterQualityManagementPlanDevelopmentType?: FormControl<WaterQualityManagementPlanDevelopmentTypeDto>;
    WaterQualityManagementPlanPermitTerm?: FormControl<WaterQualityManagementPlanPermitTermDto>;
    HydromodificationAppliesType?: FormControl<HydromodificationAppliesTypeDto>;
    HydrologicSubarea?: FormControl<HydrologicSubareaDto>;
    WaterQualityManagementPlanModelingApproach?: FormControl<WaterQualityManagementPlanModelingApproachDto>;
    TrashCaptureStatusType?: FormControl<TrashCaptureStatusTypeDto>;
    LastNereidLog?: FormControl<NereidLogSimpleDto>;
    Watershed?: FormControl<WatershedSimpleDto>;
    WaterQualityManagementPlanBoundary?: FormControl<WaterQualityManagementPlanBoundaryDto>;
    WaterQualityManagementPlanDocuments?: FormControl<Array<WaterQualityManagementPlanDocumentDto>>;
    WaterQualityManagementPlanParcels?: FormControl<Array<WaterQualityManagementPlanParcelDto>>;
    WaterQualityManagementPlanVerifies?: FormControl<Array<WaterQualityManagementPlanVerifyDto>>;
}

export class WaterQualityManagementPlanDtoFormControls { 
    public static WaterQualityManagementPlanID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static StormwaterJurisdictionID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanLandUseID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanPriorityID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanStatusID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanDevelopmentTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ApprovalDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactName = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactOrganization = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactPhone = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactAddress1 = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactAddress2 = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactCity = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactState = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static MaintenanceContactZip = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanPermitTermID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static HydromodificationAppliesTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static DateOfConstruction = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static HydrologicSubareaID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static RecordNumber = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static RecordedWQMPAreaInAcres = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static TrashCaptureStatusTypeID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static TrashCaptureEffectiveness = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanModelingApproachID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LastNereidLogID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanBoundaryNotes = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static StormwaterJurisdiction = (value: FormControlState<StormwaterJurisdictionDto> | StormwaterJurisdictionDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<StormwaterJurisdictionDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanLandUse = (value: FormControlState<WaterQualityManagementPlanLandUseDto> | WaterQualityManagementPlanLandUseDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterQualityManagementPlanLandUseDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanPriority = (value: FormControlState<WaterQualityManagementPlanPriorityDto> | WaterQualityManagementPlanPriorityDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterQualityManagementPlanPriorityDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanStatus = (value: FormControlState<WaterQualityManagementPlanStatusDto> | WaterQualityManagementPlanStatusDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterQualityManagementPlanStatusDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanDevelopmentType = (value: FormControlState<WaterQualityManagementPlanDevelopmentTypeDto> | WaterQualityManagementPlanDevelopmentTypeDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterQualityManagementPlanDevelopmentTypeDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanPermitTerm = (value: FormControlState<WaterQualityManagementPlanPermitTermDto> | WaterQualityManagementPlanPermitTermDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterQualityManagementPlanPermitTermDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static HydromodificationAppliesType = (value: FormControlState<HydromodificationAppliesTypeDto> | HydromodificationAppliesTypeDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<HydromodificationAppliesTypeDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static HydrologicSubarea = (value: FormControlState<HydrologicSubareaDto> | HydrologicSubareaDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<HydrologicSubareaDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanModelingApproach = (value: FormControlState<WaterQualityManagementPlanModelingApproachDto> | WaterQualityManagementPlanModelingApproachDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterQualityManagementPlanModelingApproachDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static TrashCaptureStatusType = (value: FormControlState<TrashCaptureStatusTypeDto> | TrashCaptureStatusTypeDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<TrashCaptureStatusTypeDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static LastNereidLog = (value: FormControlState<NereidLogSimpleDto> | NereidLogSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<NereidLogSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static Watershed = (value: FormControlState<WatershedSimpleDto> | WatershedSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WatershedSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanBoundary = (value: FormControlState<WaterQualityManagementPlanBoundaryDto> | WaterQualityManagementPlanBoundaryDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<WaterQualityManagementPlanBoundaryDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanDocuments = (value: FormControlState<Array<WaterQualityManagementPlanDocumentDto>> | Array<WaterQualityManagementPlanDocumentDto> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<WaterQualityManagementPlanDocumentDto>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanParcels = (value: FormControlState<Array<WaterQualityManagementPlanParcelDto>> | Array<WaterQualityManagementPlanParcelDto> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<WaterQualityManagementPlanParcelDto>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static WaterQualityManagementPlanVerifies = (value: FormControlState<Array<WaterQualityManagementPlanVerifyDto>> | Array<WaterQualityManagementPlanVerifyDto> = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<Array<WaterQualityManagementPlanVerifyDto>>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
