/**
 * Neptune.API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { PersonDisplayDto } from './person-display-dto';
import { FileResourceMimeTypeSimpleDto } from './file-resource-mime-type-simple-dto';


import { FormControl, FormControlOptions, FormControlState, Validators } from "@angular/forms";
export class FileResourceDto { 
    FileResourceID?: number;
    FileResourceMimeType?: FileResourceMimeTypeSimpleDto;
    OriginalBaseFilename?: string | null;
    OriginalFileExtension?: string | null;
    OriginalFilename?: string | null;
    FileResourceGUID?: string;
    CreatePerson?: PersonDisplayDto;
    CreateDate?: string;
    ContentLength?: number;
    constructor(obj?: any) {
        Object.assign(this, obj);
    }
}

export interface FileResourceDtoForm { 
    FileResourceID?: FormControl<number>;
    FileResourceMimeType?: FormControl<FileResourceMimeTypeSimpleDto>;
    OriginalBaseFilename?: FormControl<string>;
    OriginalFileExtension?: FormControl<string>;
    OriginalFilename?: FormControl<string>;
    FileResourceGUID?: FormControl<string>;
    CreatePerson?: FormControl<PersonDisplayDto>;
    CreateDate?: FormControl<string>;
    ContentLength?: FormControl<number>;
}

export class FileResourceDtoFormControls { 
    public static FileResourceID = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static FileResourceMimeType = (value: FormControlState<FileResourceMimeTypeSimpleDto> | FileResourceMimeTypeSimpleDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<FileResourceMimeTypeSimpleDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static OriginalBaseFilename = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static OriginalFileExtension = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static OriginalFilename = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static FileResourceGUID = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CreatePerson = (value: FormControlState<PersonDisplayDto> | PersonDisplayDto = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<PersonDisplayDto>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static CreateDate = (value: FormControlState<string> | string = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<string>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
    public static ContentLength = (value: FormControlState<number> | number = undefined, formControlOptions?: FormControlOptions | null) => new FormControl<number>(
        value,
        formControlOptions ?? 
        {
            nonNullable: false,
            validators: 
            [
            ],
        }
    );
}
