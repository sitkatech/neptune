@*-----------------------------------------------------------------------
    <copyright file="NewMonitoringProgramDocument.cshtml" company="Tahoe Regional Planning Agency">
    Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@

@using Neptune.Web.Views.Shared
@using Neptune.Web.Common.HtmlHelperExtensions
@using Microsoft.AspNetCore.Mvc.TagHelpers
@inherits Neptune.Web.Views.TreatmentBMP.UploadTreatmentBMPs
@model Neptune.Web.Views.TreatmentBMP.UploadTreatmentBMPsViewModel

<style>

    .mt-2 {
        margin-top: 20px;
    }

    .mb-2 {
        margin-bottom: 20px;
    }

    .scrollbox {
        overflow-y: auto;
        max-height: 190px;
    }
</style>

@{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.ViewPageContentViewData); }

<form method="post" enctype="multipart/form-data">
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-sm-2 col-xs-12 control-label">
                @Html.LabelWithSugarFor(m => m.TreatmentBMPTypeID)
            </div>
            <div class="col-sm-10 col-xs-12">
                @Html.DropDownListFor(m => m.TreatmentBMPTypeID, ViewDataTyped.TreatmentBMPTypes, new { @class = "form-control", style = "width:auto;" })
            </div>
        </div>
        <div class="form-group ">
            <div class="col-sm-2 col-xs-12 control-label">
                @Html.LabelWithSugarFor(m => m.UploadCSV)
            </div>
            <div class="col-sm-10 col-xs-12">
                @Html.EditorFor(m => m.UploadCSV, new { @class = "form-control" })
            </div>
        </div>
        <div class="pull-right">
            <button type="submit" class="btn btn-neptune">Upload</button>
        </div>
        <div class="clearfix"></div>
    </div>
</form>

@if (ViewDataTyped.ErrorList.Any())
{
    var count = 1;
    var errorProperGrammarMessage = ViewDataTyped.ErrorList.Count == 1 ? "is 1 error that needs" : "are " + ViewDataTyped.ErrorList.Count + " errors that need";
    <div>
        <div class="alert alert-danger">There @errorProperGrammarMessage to be fixed before upload can be successful</div>
        <div class="panel panel-default mt-2">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-sm-1">
                        <strong>Error</strong>
                    </div>
                    <div class="col-sm-11">
                        <strong>Description</strong>
                    </div>
                </div>
            </div>
            <div class="panel-body scrollbox">
                @foreach (var error in ViewDataTyped.ErrorList)
                {
                    <div clas="row">
                        <div class="col-sm-1">
                            @count
                        </div>
                        <div class="col-sm-11">
                            @error
                        </div>
                    </div>
                    count++;

                }
            </div>
        </div>
    </div>

}