@using Neptune.EFModels.Entities
@using Neptune.Web.Common.HtmlHelperExtensions
@using Neptune.Web.Views.WaterQualityManagementPlan
@model NewViewModel
@inherits New

<style>
    .radio-inline label {
        font-weight: normal;
    }
</style>
<div class="row">
    <div class="col-xs-12">
        <div class="form-horizontal">
            @using (Html.BeginForm())
            {
                @Html.HiddenFor(m => m.WaterQualityManagementPlanID)
                <fieldset>
                    <legend>Water Quality Management Plan Details</legend>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.WaterQualityManagementPlanName)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.TextBoxFor(m => m.WaterQualityManagementPlanName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.WaterQualityManagementPlanName)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.StormwaterJurisdictionID)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.SearchableDropDownListFor(m => m.StormwaterJurisdictionID, ViewDataTyped.StormwaterJurisdictionSelectListItems)
                            @Html.ValidationMessageFor(m => m.StormwaterJurisdictionID)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.WaterQualityManagementPlanPriorityID)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @foreach (var priority in ViewDataTyped.WaterQualityManagementPlanPriorities)
                            {
                                <div class="radio-inline">
                                    <label>
                                        @Html.RadioButtonFor(m => m.WaterQualityManagementPlanPriorityID, priority.WaterQualityManagementPlanPriorityID)
                                        @priority.WaterQualityManagementPlanPriorityDisplayName
                                    </label>
                                </div>
                            }
                            @Html.ValidationMessageFor(m => m.WaterQualityManagementPlanPriorityID)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.WaterQualityManagementPlanStatusID)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @foreach (var status in ViewDataTyped.WaterQualityManagementPlanStatuses)
                            {
                                <div class="radio-inline">
                                    <label>
                                        @Html.RadioButtonFor(m => m.WaterQualityManagementPlanStatusID, status.WaterQualityManagementPlanStatusID)
                                        @status.WaterQualityManagementPlanStatusDisplayName
                                    </label>
                                </div>
                            }
                            @Html.ValidationMessageFor(m => m.WaterQualityManagementPlanStatusID)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.WaterQualityManagementPlanDevelopmentTypeID)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @foreach (var developmentType in ViewDataTyped.WaterQualityManagementPlanDevelopmentTypes)
                            {
                                <div class="radio-inline">
                                    <label>
                                        @Html.RadioButtonFor(m => m.WaterQualityManagementPlanDevelopmentTypeID, developmentType.WaterQualityManagementPlanDevelopmentTypeID)
                                        @developmentType.WaterQualityManagementPlanDevelopmentTypeDisplayName
                                    </label>
                                </div>
                            }
                            @Html.ValidationMessageFor(m => m.WaterQualityManagementPlanDevelopmentTypeID)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.WaterQualityManagementPlanLandUseID)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.SearchableDropDownListFor(m => m.WaterQualityManagementPlanLandUseID, ViewDataTyped.WaterQualityManagementPlanLandUses)
                            @Html.ValidationMessageFor(m => m.WaterQualityManagementPlanLandUseID)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.ApprovalDate)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.TextBoxFor(m => m.ApprovalDate, new { @class = "form-control", type = "date"  })
                            @Html.ValidationMessageFor(m => m.ApprovalDate)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.DateOfConstruction)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.TextBoxFor(m => m.DateOfConstruction, new { @class = "form-control", type = "date"  })
                            @Html.ValidationMessageFor(m => m.DateOfConstruction)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.HydromodificationAppliesTypeID)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @foreach (var hydromodificationAppliesType in ViewDataTyped.HydromodificationAppliesTypes)
                            {
                                <div class="radio-inline">
                                    <label>
                                        @Html.RadioButtonFor(m => m.HydromodificationAppliesTypeID, hydromodificationAppliesType.HydromodificationAppliesTypeID)
                                        @hydromodificationAppliesType.HydromodificationAppliesTypeDisplayName
                                    </label>
                                </div>
                            }
                            @Html.ValidationMessageFor(m => m.HydromodificationAppliesTypeID)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.HydrologicSubareaID)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.SearchableDropDownListFor(m => m.HydrologicSubareaID, ViewDataTyped.HydrologicSubareas)
                            @Html.ValidationMessageFor(m => m.HydrologicSubareaID)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.WaterQualityManagementPlanPermitTermID)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.SearchableDropDownListFor(m => m.WaterQualityManagementPlanPermitTermID, ViewDataTyped.WaterQualityManagementPlanPermitTerms)
                            @Html.ValidationMessageFor(m => m.WaterQualityManagementPlanPermitTermID)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.RecordNumber)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.TextAreaFor(m => m.RecordNumber, new { @class = "form-control" })
                            <p class="help-block">If there are multiple Record Numbers separate them with a comma</p>
                            @Html.ValidationMessageFor(m => m.RecordNumber)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.RecordedWQMPAreaInAcres)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.TextBoxFor(m => m.RecordedWQMPAreaInAcres, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.RecordedWQMPAreaInAcres)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.TrashCaptureStatusTypeID)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.SearchableDropDownListFor(m => m.TrashCaptureStatusTypeID, ViewDataTyped.TrashCaptureStatusTypes)
                            @Html.ValidationMessageFor(m => m.TrashCaptureStatusTypeID)
                        </div>
                    </div>
                    <div class="form-group">
                        <div id="treatmentBMPTrashCaptureContainer">
                            <div class="col-xs-12 col-sm-3 control-label">
                                @Html.LabelWithSugarFor(m => m.TrashCaptureEffectiveness)
                            </div>
                            <div class="col-xs-12 col-sm-9 input-group" style="width: 250px; padding-left: 15px">
                                @Html.TextBox(@Html.NameFor(x => x.TrashCaptureEffectiveness).ToString(), (Model.TrashCaptureEffectiveness.HasValue ? Model.TrashCaptureEffectiveness.Value.ToString() : string.Empty), new { @class = "sitkaPercentage form-control", onchange = "this.value = Math.round(this.value);", step = "1", type = "number" })
                                <span class="input-group-addon" style="border-top-right-radius: 4px; border-bottom-right-radius: 4px;">%</span>
                                @Html.ValidationMessageFor(m => m.TrashCaptureEffectiveness)
                            </div>
                        </div>
                    </div>
                </fieldset>
                <fielset>
                    <legend>Maintenance Contact</legend>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.MaintenanceContactName)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.TextBoxFor(m => m.MaintenanceContactName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.MaintenanceContactName)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.MaintenanceContactOrganization)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.TextBoxFor(m => m.MaintenanceContactOrganization, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.MaintenanceContactOrganization)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.MaintenanceContactAddress1)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.TextBoxFor(m => m.MaintenanceContactAddress1, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.MaintenanceContactAddress1)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.MaintenanceContactAddress2)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.TextBoxFor(m => m.MaintenanceContactAddress2, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.MaintenanceContactAddress2)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.MaintenanceContactCity)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.TextBoxFor(m => m.MaintenanceContactCity, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.MaintenanceContactCity)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.MaintenanceContactState)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.TextBoxFor(m => m.MaintenanceContactState, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.MaintenanceContactState)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.MaintenanceContactZip)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.TextBoxFor(m => m.MaintenanceContactZip, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.MaintenanceContactZip)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-12 col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.MaintenanceContactPhone)
                        </div>
                        <div class="col-xs-12 col-sm-9">
                            @Html.TextBoxFor(m => m.MaintenanceContactPhone, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.MaintenanceContactPhone)
                        </div>
                    </div>
                </fielset>
            }
        </div>
    </div>
</div>

<script>

    jQuery(document).ready(function() {
        if (jQuery("#@Html.IdFor(m => m.TrashCaptureStatusTypeID)").val() ==
            @(TrashCaptureStatusType.Partial.TrashCaptureStatusTypeID)) {
            jQuery("#treatmentBMPTrashCaptureContainer").show();
        } else {
            jQuery("#treatmentBMPTrashCaptureContainer").hide();
        }

        jQuery("#@Html.IdFor(m=>m.TrashCaptureStatusTypeID)").change(function() {
            if (jQuery("#@Html.IdFor(m=>m.TrashCaptureStatusTypeID)").val() ==
                @(TrashCaptureStatusType.Partial.TrashCaptureStatusTypeID)) {
                jQuery("#treatmentBMPTrashCaptureContainer").show();
            } else {
                jQuery("#treatmentBMPTrashCaptureContainer").hide();
            }
        });
    })
</script>