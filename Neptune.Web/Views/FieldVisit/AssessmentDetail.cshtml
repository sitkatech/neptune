@using Neptune.Web.Views.Shared
@using Neptune.Web.Views.TreatmentBMPAssessment
@using Neptune.EFModels.Entities
@using Neptune.Web.Common.HtmlHelperExtensions
@inherits Neptune.Web.Views.FieldVisit.AssessmentDetail

@if (ViewDataTyped.TreatmentBMPAssessment == null)
{
    <p class="systemText">No @(ViewDataTyped.FieldVisitAssessmentType == TreatmentBMPAssessmentTypeEnum.Initial ? "initial assessment" : "post-maintenance assessment") was performed during this Field Visit</p>
}
else
{
    <div class="row">
        <div class="col-xs-12">
            <div class="row">
                <label class="col-sm-3 control-label">Score:</label>
                @if (ViewDataTyped.TreatmentBMPAssessment.IsAssessmentComplete)
                {
                    <div class="col-sm-9">
                        @ViewDataTyped.TreatmentBMPAssessment.FormattedScore()
                    </div>
                }
                else
                {
                    <div class="col-sm-9">
                        Assessment Not Complete
                    </div>
                }
            </div>
            <div class="row">
                <label class="col-sm-3 control-label">Conducted By:</label>
                <div class="col-sm-9">@ViewDataTyped.TreatmentBMPAssessment.GetFieldVisitPerson().GetFullNameFirstLast()</div>
            </div>
            <div class="row">
                <label class="col-sm-3 control-label">Assessment Date:</label>
                <div class="col-sm-9">@ViewDataTyped.TreatmentBMPAssessment.GetAssessmentDate().Date.ToShortDateString()</div>
            </div>
            <div class="row">
                <label class="col-sm-3 control-label">Field Notes:</label>
                <div class="col-sm-9">@ViewDataTyped.TreatmentBMPAssessment.Notes</div>
            </div>
        </div>
    </div>
    <hr/>
    <div class="row">
        <div class="col-xs-12">
            <div class="panel panelNeptune">
                <div class="panel-heading panelTitle">
                    Photos
                </div>
                <div class="panel-body">
                    @{ ImageCarousel.RenderPartialView(Html, ViewDataTyped.ImageCarouselViewData); }
                </div>
            </div>
        </div>
        <div class="col-xs-12">
            <div class="panel panelNeptune">
                <div class="panel-heading panelTitle">
                    Score Details
                </div>
                <div class="panel-body">
                    @if (ViewDataTyped.TreatmentBMPAssessment.TreatmentBMP.IsBenchmarkAndThresholdsComplete())
                    {
                        {
                            Html.RenderRazorSitkaPartial<ScoreDetail, ScoreDetailViewData>(ViewDataTyped.ScoreDetailViewData);
                        }
                    }
                    else
                    {
                        <p>Unable to calculate Assessment Score: Benchmark & Threshold are not yet set</p>
                        if (ViewDataTyped.CanEdit)
                        {
                            <a href="@ViewDataTyped.EditBenchmarkAndThresholdUrl" class="btn btn-neptune">Edit Benchmark & Threshold</a>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        @foreach (var treatmentBMPAssessmentObservationType in ViewDataTyped.TreatmentBMPAssessment.TreatmentBMP.TreatmentBMPType.GetObservationTypesForAssessment().Select(x => x.TreatmentBMPAssessmentObservationType))
        {
            <div class="col-xs-12">
                <div class="panel panelNeptune">
                    <div class="panel-heading panelTitle">
                        Observation: @treatmentBMPAssessmentObservationType.TreatmentBMPAssessmentObservationTypeName
                    </div>
                    <div class="panel-body">
                        @{ var treatmentBMPObservation = ViewDataTyped.TreatmentBMPAssessment.TreatmentBMPObservations.SingleOrDefault(x => x.TreatmentBMPAssessmentObservationTypeID == treatmentBMPAssessmentObservationType.TreatmentBMPAssessmentObservationTypeID); }
                        @if (treatmentBMPObservation == null)
                        {
                            <span>Observation data not entered</span>
                        }
                        else if (treatmentBMPAssessmentObservationType.ObservationTypeSpecification.ObservationTypeCollectionMethod == ObservationTypeCollectionMethod.DiscreteValue)
                        {
                            <table class="table table-striped table-responsive">
                                <thead>
                                <tr>
                                    <th>Type</th>
                                    <th>Observed Value</th>
                                    <th>Note</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var observation in treatmentBMPObservation.GetDiscreteObservationData().SingleValueObservations)
                                {
                                    <tr>
                                        <td>@observation.PropertyObserved</td>
                                        <td>@string.Format("{0} {1}", observation.ObservationValue, treatmentBMPObservation.TreatmentBMPAssessmentObservationType.GetMeasurementUnitType().LegendDisplayName)</td>
                                        <td>@observation.Notes</td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        }
                        else if (treatmentBMPAssessmentObservationType.ObservationTypeSpecification.ObservationTypeCollectionMethod == ObservationTypeCollectionMethod.Percentage)
                        {
                            <table class="table table-striped table-responsive">
                                <thead>
                                <tr>
                                    <th>Type</th>
                                    <th style="text-align: right">@treatmentBMPAssessmentObservationType.BenchmarkMeasurementUnitLabel()</th>
                                    <th>Note</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var observation in treatmentBMPObservation.GetDiscreteObservationData().SingleValueObservations)
                                {
                                    <tr>
                                        <td>@observation.PropertyObserved</td>
                                        <td style="text-align: right">@(observation.ObservationValue)%</td>
                                        <td>@observation.Notes</td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        }
                        else if (treatmentBMPAssessmentObservationType.ObservationTypeSpecification.ObservationTypeCollectionMethod == ObservationTypeCollectionMethod.PassFail)
                        {
                            <table class="table table-striped table-responsive">
                                <thead>
                                <tr>
                                    <th>Type</th>
                                    <th>Observed Value</th>
                                    <th>Note</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var observation in treatmentBMPObservation.GetPassFailObservationData().SingleValueObservations)
                                {
                                    <tr>
                                        <td>@observation.PropertyObserved</td>
                                        <td>@(Convert.ToBoolean(observation.ObservationValue) ? treatmentBMPObservation.TreatmentBMPAssessmentObservationType.GetPassFailSchema().PassingScoreLabel : treatmentBMPObservation.TreatmentBMPAssessmentObservationType.GetPassFailSchema().FailingScoreLabel)</td>
                                        <td>@observation.Notes</td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <span>Not implemented yet!</span>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
