@*-----------------------------------------------------------------------
    <copyright file="Index.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using Neptune.Web.Views.Shared
@using Neptune.Common
@using Neptune.EFModels.Entities
@using Neptune.Web.Common
@using Neptune.Web.Views.Shared.SortOrder
@inherits Neptune.Web.Views.TreatmentBMPType.Index
@section JavascriptAndStylesContent
{
    @{
        DhtmlxGridIncludes.RenderPartialView(Html);
    }
}

@{
    ViewPageContent.RenderPartialView(Html, ViewDataTyped.ViewPageContentViewData);
}


@foreach (var batch in ViewDataTyped.TreatmentBMPTypes.OrderBy(x => x.TreatmentBMPTypeName).Chunk(2))
{
    <div class="row">
        @foreach (var treatmentBMPType in batch)
        {
            <div class="col-lg-6">
                <div class="panel panelNeptune">
                    <div class="panel-heading panelTitle">
                        @treatmentBMPType.TreatmentBMPTypeName
                    </div>
                    <div class="panel-body">
                        @{
                            if (!ViewDataTyped.CurrentPerson.IsAnonymousOrUnassigned())
                            {
                                <a href="@ViewDataTyped.DetailUrlTemplate.ParameterReplace(treatmentBMPType.TreatmentBMPTypeID)" class="pull-right btn btn-neptune" style="margin-bottom: 10px;">View Details</a>
                            }
                        }
                        @Html.Label("Description:") <br /> @treatmentBMPType.TreatmentBMPTypeDescription
                        <br />
                        @Html.Label("Number of BMPs:") @(ViewDataTyped.CountByTreatmentBMPType.TryGetValue(treatmentBMPType.TreatmentBMPTypeID, out var value) ? value : 0)
                        <br />

                        @{
                            if (!ViewDataTyped.CurrentPerson.IsAnonymousOrUnassigned())
                            {
                                <table class="table table-striped table-responsive">
                                    @Html.Label("Applicable Observation Types:")
                                    <thead>
                                        <tr>
                                            <th class="col-xs-4">Observation</th>
                                            <th class="col-xs-2">Weight</th>
                                            <th class="col-xs-3">Benchmark Default</th>
                                            <th class="col-xs-3">Threshold Default</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var treatmentBMPAssessmentObservationType in treatmentBMPType.TreatmentBMPTypeAssessmentObservationTypes.SortByOrderThenName().Select(x => x.TreatmentBMPAssessmentObservationType))
                                        {
                                            var treatmentBMPTypeAssessmentObservationType = treatmentBMPType.GetTreatmentBMPTypeObservationType(treatmentBMPAssessmentObservationType);
                                            <tr>
                                                <td><a href="@ViewDataTyped.TreatmentBMPAssessmentObservationTypeDetailUrlTemplate.ParameterReplace(treatmentBMPAssessmentObservationType.TreatmentBMPAssessmentObservationTypeID)">@treatmentBMPAssessmentObservationType.TreatmentBMPAssessmentObservationTypeName</a></td>
                                                <td>@(treatmentBMPTypeAssessmentObservationType.AssessmentScoreWeight.HasValue ? treatmentBMPTypeAssessmentObservationType.AssessmentScoreWeight.ToStringShortPercent() : "pass/fail")</td>
                                                @if (treatmentBMPAssessmentObservationType.GetHasBenchmarkAndThreshold())
                                                {
                                                    <td>@treatmentBMPAssessmentObservationType.GetFormattedBenchmarkValue(treatmentBMPTypeAssessmentObservationType.DefaultBenchmarkValue)</td>
                                                    <td>@treatmentBMPAssessmentObservationType.GetFormattedThresholdValue(treatmentBMPTypeAssessmentObservationType.DefaultThresholdValue, treatmentBMPTypeAssessmentObservationType.DefaultBenchmarkValue)</td>
                                                }
                                                else
                                                {
                                                    <td>@ViewUtilities.NaString</td>
                                                    <td>@ViewUtilities.NaString</td>
                                                }

                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                @Html.Label("Attribute Types:")
                                <ul>
                                    @foreach (var purpose in CustomAttributeTypePurpose.All)
                                    {
                                        <li>This BMP Type has @(treatmentBMPType.TreatmentBMPTypeCustomAttributeTypes.Count(x => x.CustomAttributeType.CustomAttributeTypePurposeID == purpose.CustomAttributeTypePurposeID)) @purpose.CustomAttributeTypePurposeDisplayName</li>
                                    }
                                </ul>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
