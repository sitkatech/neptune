@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Neptune.EFModels.Entities
@using Neptune.Web.Common
@using Neptune.Web.Common.BootstrapWrappers
@using Neptune.Web.Common.HtmlHelperExtensions
@using Neptune.Web.Views.Shared
@inherits Neptune.Web.Views.TreatmentBMPType.Edit
@model Neptune.Web.Views.TreatmentBMPType.EditViewModel

<script type="text/javascript" src="@Url.Content("~/Content/angular-controllers/EditTreatmentBMPTypeController.js")"></script>
<script type="text/javascript">
    // <![CDATA[
    angular.module("NeptuneApp")
        .factory("angularModelAndViewData",
            function()
            {
                return {
                    AngularViewData: @Html.Raw(ViewDataTyped.ViewDataForAngular.ToJsonHtmlString()),
                    AngularModel: @Html.Raw(Model.ToJsonHtmlString())
                };
            });

    // ]]>
</script>
<style>
    .input-group input {
        min-width: 60px;
    }
</style>

@{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.ViewInstructionsNeptunePage); }


<form method="POST" action="@ViewDataTyped.SubmitUrl" ng-app="NeptuneApp" id="EditTreatmentBMPTypeControllerApp" ng-controller="EditTreatmentBMPTypeController" ng-submit="submit()" name="treatmentBMPTypeForm">
    <div class="formPage">
        <div class="row">
            <div class="col-xs-12">
                <div class="validationError">
                    @Html.ValidationSummary()
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.TreatmentBMPTypeName)
                        </div>
                        <div class="col-sm-5">
                            @Html.TextBoxFor(m => m.TreatmentBMPTypeName, new { @class = "form-control", style = "width:100%" })
                            @Html.ValidationMessageFor(m => m.TreatmentBMPTypeName)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3 control-label">
                            @Html.LabelWithSugarFor(m => m.TreatmentBMPTypeDescription)
                        </div>
                        <div class="col-sm-9">
                            @Html.TextAreaWithMaxLengthFor(m => m.TreatmentBMPTypeDescription, new TextAreaForExtensions.TextAreaDimensions(null, 4), null, new List<string>() { "form-control" })
                            @Html.ValidationMessageFor(m => m.TreatmentBMPTypeName)
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-xs-12">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-sm-3 control-label">
                            @Html.Label("Observation Type to Add")
                        </div>
                        <div class="col-sm-5">
                            <div class="input-group">
                                <select ng-model="ObservationTypeToAdd"
                                        class="selectpicker"
                                        data-live-search="true"
                                        data-container="body"
                                        data-width="100%" selectpicker
                                        data-title="Select an Observation Type to Add"
                                        ng-options="TreatmentBMPAssessmentObservationType as TreatmentBMPAssessmentObservationType.TreatmentBMPAssessmentObservationTypeName for TreatmentBMPAssessmentObservationType in filteredObservationTypes() track by TreatmentBMPAssessmentObservationType.TreatmentBMPAssessmentObservationTypeID">
                                    <option value="" disabled selected>Select an Observation Type to Add</option>
                                </select>
                                <span class="input-group-btn">
                                    <button class="btn btn-neptune" type="button" ng-click="addObservationTypeRow()">
                                        <span class="glyphicon glyphicon-plus"></span> Add
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div style="overflow-x: auto" class="form-inline">
            <table class="table observationTypeTable" style="margin-top: 20px; overflow: scroll" ng-show="AngularModel.TreatmentBMPTypeObservationTypes.length > 0">
                <tr>
                    <th></th>
                    <th class="text-left">@Html.LabelWithSugarFor(FieldDefinitionType.TreatmentBMPAssessmentObservationType)</th>
                    <th class="text-left">@Html.LabelWithSugarFor(FieldDefinitionType.ObservationCollectionMethod)</th>
                    <th class="text-left">@Html.LabelWithSugarFor(FieldDefinitionType.DefaultBenchmarkValue)</th>
                    <th class="text-left">@Html.LabelWithSugarFor(FieldDefinitionType.DefaultThresholdValue)</th>
                    <th class="text-right">@Html.LabelWithSugarFor(FieldDefinitionType.AssessmentScoreWeight)</th>
                    <th style="width: 32px"></th>
                    <th class="text-left">@Html.LabelWithSugarFor(FieldDefinitionType.AssessmentFailsIfObservationFails) </th>
                </tr>
                <tr ng-repeat="treatmentBMPTypeObservationTypeSimple in AngularModel.TreatmentBMPTypeObservationTypes | orderBy:[getObservationTypeSortOrder, getObservationTypeName]">
                    <td>
                        <span class="glyphicon glyphicon-trash blue" title="Remove row" alt="Remove row" ng-click="deleteObservationTypeRow(treatmentBMPTypeObservationTypeSimple)" style="cursor: pointer"></span>
                    </td>
                    <td class="text-left" ng-bind="getObservationTypeName(treatmentBMPTypeObservationTypeSimple)"></td>
                    <td class="text-left" ng-bind="getObservationCollectionMethodTypeName(treatmentBMPTypeObservationTypeSimple)"></td>

                    @*if observation type is not pass/fail*@
                    <td ng-if="observationTypeHasBenchmarkAndThresholds(treatmentBMPTypeObservationTypeSimple.TreatmentBMPAssessmentObservationTypeID)" class="text-left">
                        <div class="input-group">
                            <input type="number" ng-model="treatmentBMPTypeObservationTypeSimple.DefaultBenchmarkValue" class="form-control" aria-describedby="benchmarkUnit{{$index}}" />
                            <span class="input-group-addon" id="benchmarkUnit{{$index}}" ng-bind="getObservationTypeBenchmarkUnit(treatmentBMPTypeObservationTypeSimple)"></span>
                        </div>
                    </td>
                    <td ng-if="observationTypeHasBenchmarkAndThresholds(treatmentBMPTypeObservationTypeSimple.TreatmentBMPAssessmentObservationTypeID)" class="text-left">
                        <div class="input-group">
                            <span ng-if="observationTypeTargetIsSweetSpot(treatmentBMPTypeObservationTypeSimple.TreatmentBMPAssessmentObservationTypeID)" class="input-group-addon">+/-</span>
                            <input type="number" ng-model="treatmentBMPTypeObservationTypeSimple.DefaultThresholdValue" class="form-control" aria-describedby="thresholdUnit{{$index}}" />
                            <span class="input-group-addon" id="thresholdUnit{{$index}}" ng-bind="getObservationTypeThresholdUnit(treatmentBMPTypeObservationTypeSimple)"></span>
                        </div>
                    </td>
                    <td ng-if="observationTypeHasBenchmarkAndThresholds(treatmentBMPTypeObservationTypeSimple.TreatmentBMPAssessmentObservationTypeID)" class="text-right">
                        <div class="input-group">
                            <input type="number" ng-model="treatmentBMPTypeObservationTypeSimple.AssessmentScoreWeight" class="form-control" aria-describedby="assessmentWeight{{$index}}" />
                            <span class="input-group-addon" id="assessmentWeight{{$index}}">%</span>
                        </div>
                    </td>
                    <td ng-if="observationTypeHasBenchmarkAndThresholds(treatmentBMPTypeObservationTypeSimple.TreatmentBMPAssessmentObservationTypeID)"></td>
                    <td ng-if="observationTypeHasBenchmarkAndThresholds(treatmentBMPTypeObservationTypeSimple.TreatmentBMPAssessmentObservationTypeID)"></td>


                    @*if observation type is pass/fail*@
                    <td ng-if="!observationTypeHasBenchmarkAndThresholds(treatmentBMPTypeObservationTypeSimple.TreatmentBMPAssessmentObservationTypeID)" class="text-right"></td>
                    <td ng-if="!observationTypeHasBenchmarkAndThresholds(treatmentBMPTypeObservationTypeSimple.TreatmentBMPAssessmentObservationTypeID)" class="text-right"></td>
                    <td ng-if="!observationTypeHasBenchmarkAndThresholds(treatmentBMPTypeObservationTypeSimple.TreatmentBMPAssessmentObservationTypeID)" class="text-right">
                        <div class="input-group">
                            <input type="number" ng-model="treatmentBMPTypeObservationTypeSimple.AssessmentScoreWeight" ng-disabled="treatmentBMPTypeObservationTypeSimple.OverrideAssessmentScoreIfFailing" class="form-control" aria-describedby="assessmentWeight{{$index}}" />
                            <span class="input-group-addon" id="assessmentWeight{{$index}}">%</span>
                        </div>
                    </td>
                    <td ng-if="!observationTypeHasBenchmarkAndThresholds(treatmentBMPTypeObservationTypeSimple.TreatmentBMPAssessmentObservationTypeID)" class="text-center">
                        @Html.Label("or")
                    </td>
                    <td ng-if="!observationTypeHasBenchmarkAndThresholds(treatmentBMPTypeObservationTypeSimple.TreatmentBMPAssessmentObservationTypeID)" class="text-center">
                        <input ng-model="treatmentBMPTypeObservationTypeSimple.OverrideAssessmentScoreIfFailing" ng-change="checkOverrideIfFailing(treatmentBMPTypeObservationTypeSimple)" type="checkbox" />
                    </td>
                </tr>
                <tr>
                    <th colspan="5">Total</th>
                    <th style="text-align: right"><span ng-bind="getWeightTotal()"></span>%</th>
                    <th></th>
                    <th></th>
                </tr>
            </table>
        </div>

        <div ng-repeat="treatmentBMPTypeObservationTypeSimple in AngularModel.TreatmentBMPTypeObservationTypes | orderBy:[getObservationTypeName]">
            <input type="hidden" name="@Html.NameFor(x => x.TreatmentBMPTypeObservationTypes[0].TreatmentBMPAssessmentObservationTypeID).ToString().Replace("0", "{{$index}}")" value="{{treatmentBMPTypeObservationTypeSimple.TreatmentBMPAssessmentObservationTypeID}}" />
            <input type="hidden" name="@Html.NameFor(x => x.TreatmentBMPTypeObservationTypes[0].DefaultBenchmarkValue).ToString().Replace("0", "{{$index}}")" value="{{treatmentBMPTypeObservationTypeSimple.DefaultBenchmarkValue}}" />
            <input type="hidden" name="@Html.NameFor(x => x.TreatmentBMPTypeObservationTypes[0].DefaultThresholdValue).ToString().Replace("0", "{{$index}}")" value="{{treatmentBMPTypeObservationTypeSimple.DefaultThresholdValue}}" />
            <input type="hidden" name="@Html.NameFor(x => x.TreatmentBMPTypeObservationTypes[0].AssessmentScoreWeight).ToString().Replace("0", "{{$index}}")" value="{{treatmentBMPTypeObservationTypeSimple.AssessmentScoreWeight}}" />
            <input type="hidden" name="@Html.NameFor(x => x.TreatmentBMPTypeObservationTypes[0].OverrideAssessmentScoreIfFailing).ToString().Replace("0", "{{$index}}")" value="{{treatmentBMPTypeObservationTypeSimple.OverrideAssessmentScoreIfFailing}}" />
        </div>
    
        <div class="row">
            <div class="col-xs-12">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-sm-3 control-label">
                            @Html.Label("Attribute to Add")
                        </div>
                        <div class="col-sm-5">
                            <div class="input-group">
                                <select ng-model="CustomAttributeTypeToAdd"
                                        class="selectpicker"
                                        data-live-search="true"
                                        data-container="body"
                                        data-width="100%" selectpicker
                                        data-title="Select an Attribute Type to Add"
                                        ng-options="customAttributeType as customAttributeType.CustomAttributeTypeName group by customAttributeType.Purpose for customAttributeType in filteredCustomAttributeTypes() track by customAttributeType.CustomAttributeTypeID">
                                    <option value="" disabled selected>Select an Attribute Type to Add</option>
                                </select>
                                <span class="input-group-btn">
                                    <button class="btn btn-neptune" type="button" ng-click="addCustomAttributeTypeRow()">
                                        <span class="glyphicon glyphicon-plus"></span> Add
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div style="overflow-x: auto" class="form-inline">
            <table class="table observationTypeTable" style="margin-top: 20px; overflow: scroll" ng-show="AngularModel.TreatmentBMPTypeAttributeTypes.length > 0">
                <tr>
                    <th></th>
                    <th class="text-left">@Html.LabelWithSugarFor(FieldDefinitionType.CustomAttributeType)</th>
                    <th class="text-left">@Html.Label("Purpose")</th>
                    <th class="text-left">@Html.LabelWithSugarFor(FieldDefinitionType.CustomAttributeDataType)</th>
                    <th class="text-left">@Html.LabelWithSugarFor(FieldDefinitionType.MeasurementUnit)</th>
                    <th class="text-center">@Html.Label("Required?")</th>
                    <th class="text-left">@Html.Label("Description")</th>
                </tr>
                <tr ng-repeat="treatmentBMPTypeAttributeTypeSimple in AngularModel.TreatmentBMPTypeAttributeTypes | orderBy:[getCustomAttributeTypePurpose, getCustomAttributeTypeSortOrder, getCustomAttributeTypeName]">
                    <td>
                        <span class="glyphicon glyphicon-trash blue" title="Remove row" alt="Remove row" ng-click="deleteCustomAttributeTypeRow(treatmentBMPTypeAttributeTypeSimple)" style="cursor: pointer"></span>
                    </td>
                    <td class="text-left" ng-bind="getCustomAttributeTypeName(treatmentBMPTypeAttributeTypeSimple)"></td>
                    <td class="text-left" ng-bind="getCustomAttributeTypePurpose(treatmentBMPTypeAttributeTypeSimple)"></td>
                    <td class="text-left" ng-bind="getCustomAttributeTypeDataTypeName(treatmentBMPTypeAttributeTypeSimple)"></td>
                    <td class="text-left" ng-bind="getCustomAttributeTypeMeasurementUnitName(treatmentBMPTypeAttributeTypeSimple)"></td>
                    <td class="text-center" ng-bind="getCustomAttributeTypeIsRequired(treatmentBMPTypeAttributeTypeSimple)"></td>
                    <td class="text-left" ng-bind="getCustomAttributeTypeDescription(treatmentBMPTypeAttributeTypeSimple)"></td>
                </tr>
            </table>
        </div>

        <div ng-repeat="treatmentBMPTypeAttributeTypeSimple in AngularModel.TreatmentBMPTypeAttributeTypes | orderBy:[getCustomAttributeTypeName]">
            <input type="hidden" name="@Html.NameFor(x => x.TreatmentBMPTypeAttributeTypes[0].CustomAttributeTypeID).ToString().Replace("0", "{{$index}}")" value="{{treatmentBMPTypeAttributeTypeSimple.CustomAttributeTypeID}}" />
        </div>

    </div>
    <div class="row">
        <hr />
        <div class="col-xs-12 col-sm-2">
            <div><sup>@Html.Raw(BootstrapHtmlHelpers.RequiredIcon)</sup> Required Field</div>
        </div>
        <div class="col-xs-12 col-sm-10" style="text-align: right">
            <button type="submit" class="btn btn-neptune">Save</button>
            <a href="@ViewDataTyped.TreatmentBMPTypeIndexUrl" class="btn btn-neptune">Cancel</a>
        </div>
        @Html.HiddenFor(m => m.TreatmentBMPTypeID)
    </div>
</form>
