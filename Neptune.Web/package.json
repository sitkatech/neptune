{
    "name": "neptune-web",
    "version": "0.0.0",
    "config": {
        "template_dir": "../Build/typescript-angular",
        "output_dir": "src/app/shared/generated",
        "swagger_json_path": "../Neptune.API/swagger.json"
    },
    "scripts": {
        "ng": "ng",
        "start": "ng serve --disable-host-check true --ssl --ssl-cert server.crt --ssl-key server.key",
        "build": "ng build",
        "build-dev": "ng build",
        "build-qa": "node --max_old_space_size=8000 ./node_modules/@angular/cli/bin/ng build --configuration=qa",
        "build-ci": "node --max_old_space_size=8000 ./node_modules/@angular/cli/bin/ng build --configuration=qa",
        "build-prod": "node --max_old_space_size=8000 ./node_modules/@angular/cli/bin/ng build --configuration=production",
        "test": "ng test",
        "lint": "ng lint",
        "lint-fix": "ng lint --fix",
        "e2e": "ng e2e",
        "clean-model": "node src/scripts/clean-model.js",
        "gen-model": "npx @openapitools/openapi-generator-cli generate --additional-properties=modelPropertyNaming=original,fileNaming=kebab-case,supportsES6=true -i %npm_package_config_swagger_json_path% -g typescript-angular -o %npm_package_config_output_dir% -t %npm_package_config_template_dir% && npm run clean-model %npm_package_config_output_dir%",
        "prestart": "@powershell nvm install $(Get-Content .nvmrc) && @powershell nvm use $(Get-Content .nvmrc) && @powershell if((Test-Path server.crt) -eq $false -or (Test-Path server.key) -eq $false) { npm run create-dev-cert } && npm run trust-dev-cert",
        "create-dev-cert": "openssl req -newkey rsa:2048 -x509 -nodes -keyout server.key -new -out server.crt -config ./dev-cert.cnf -sha256 -days 3650",
        "trust-dev-cert": "@powershell -Command Import-Certificate -FilePath server.crt -CertStoreLocation cert:\\LocalMachine\\Root"
    },
    "private": true,
    "dependencies": {
        "@angular/animations": "20.3.0",
        "@angular/cdk": "20.2.3",
        "@angular/common": "20.3.0",
        "@angular/compiler": "20.3.0",
        "@angular/core": "20.3.0",
        "@angular/elements": "20.3.0",
        "@angular/forms": "20.3.0",
        "@angular/localize": "20.3.0",
        "@angular/platform-browser": "20.3.0",
        "@angular/platform-browser-dynamic": "20.3.0",
        "@angular/platform-server": "20.3.0",
        "@angular/router": "20.3.0",
        "@ng-select/ng-select": "^15.1.3",
        "@ngneat/dialog": "^5.2.0",
        "@popperjs/core": "^2.11.8",
        "@tinymce/tinymce-angular": "^9.0.0",
        "@types/geojson": "^7946.0.7",
        "ag-grid-angular": "^32.0.0",
        "ag-grid-community": "^32.0.0",
        "angular-oauth2-oidc": "^20.0.2",
        "angular-oauth2-oidc-jwks": "^20.0.0",
        "core-js": "^3.43.0",
        "esri-leaflet": "^3.0.10",
        "font-awesome": "^4.7.0",
        "leaflet": "^1.9.4",
        "leaflet-arrowheads": "1.2.3",
        "leaflet-draw": "^1.0.4",
        "leaflet-geometryutil": "0.9.3",
        "leaflet-gesture-handling": "^1.2.2",
        "leaflet.fullscreen": "^4.0.0",
        "leaflet.markercluster": "^1.5.3",
        "ngx-cookie-service": "^20.0.1",
        "ngx-mask": "^19.0.7",
        "rxjs": "^7.0.0",
        "tinymce": "^7.9.1",
        "tslib": "^2.8.1",
        "webpack": "^5.30.0",
        "zone.js": "~0.15.1"
    },
    "devDependencies": {
        "@angular-devkit/build-angular": "20.3.1",
        "@angular-eslint/builder": "^20.1.1",
        "@angular-eslint/eslint-plugin": "^20.1.1",
        "@angular-eslint/eslint-plugin-template": "^20.1.1",
        "@angular-eslint/schematics": "^20.1.1",
        "@angular-eslint/template-parser": "^20.1.1",
        "@angular/cli": "20.3.1",
        "@angular/compiler-cli": "20.3.0",
        "@angular/language-service": "20.3.0",
        "@fortawesome/fontawesome-free": "^5.13.0",
        "@openapitools/openapi-generator-cli": "^2.21.0",
        "@types/node": "^24.0.10",
        "@typescript-eslint/eslint-plugin": "^6.0.0",
        "@typescript-eslint/eslint-plugin-tslint": "^6.0.0",
        "@typescript-eslint/parser": "^6.0.0",
        "@typescript-eslint/types": "^8.35.1",
        "eslint": "^8.51.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-import": "^2.25.2",
        "eslint-plugin-prefer-arrow": "^1.2.3",
        "eslint-plugin-simple-import-sort": "^10.0.0",
        "eslint-plugin-unused-imports": "^3.0.0",
        "npm": "^11.4.2",
        "ts-node": "~10.9.2",
        "typescript": "^5.8.3"
    }
}
